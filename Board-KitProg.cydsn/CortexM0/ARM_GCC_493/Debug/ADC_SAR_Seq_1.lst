ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_SAR_Seq_1_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_SAR_Seq_1_Init, %function
  23              	ADC_SAR_Seq_1_Init:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 2


  33:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000000u };
  34:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  65:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  73:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  74:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 3


  90:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 4


 141:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 168:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 170:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  32              		.loc 1 172 0
  33 0002 1020     		mov	r0, #16
  34 0004 0321     		mov	r1, #3
  35 0006 FFF7FEFF 		bl	CyIntSetPriority
  36              	.LVL0:
 173:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  37              		.loc 1 173 0
  38 000a 1020     		mov	r0, #16
  39 000c 2349     		ldr	r1, .L6
  40 000e FFF7FEFF 		bl	CyIntSetVector
  41              	.LVL1:
 174:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 176:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
  42              		.loc 1 177 0
  43 0012 0122     		mov	r2, #1
  44 0014 224B     		ldr	r3, .L6+4
  45 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
  46              		.loc 1 180 0
  47 0018 224B     		ldr	r3, .L6+8
  48 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 5


 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  49              		.loc 1 178 0
  50 001c 002B     		cmp	r3, #0
  51 001e 01DA     		bge	.L5
  52 0020 2149     		ldr	r1, .L6+12
  53 0022 00E0     		b	.L2
  54              	.L5:
  55 0024 2149     		ldr	r1, .L6+16
  56              	.L2:
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  57              		.loc 1 178 0 is_stmt 0 discriminator 4
  58 0026 224A     		ldr	r2, .L6+20
  59 0028 1368     		ldr	r3, [r2]
  60 002a 0B43     		orr	r3, r1
  61 002c 1360     		str	r3, [r2]
 181:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
  62              		.loc 1 182 0 is_stmt 1 discriminator 4
  63 002e 214A     		ldr	r2, .L6+24
  64 0030 214B     		ldr	r3, .L6+28
  65 0032 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
  66              		.loc 1 183 0 discriminator 4
  67 0034 214A     		ldr	r2, .L6+32
  68 0036 224B     		ldr	r3, .L6+36
  69 0038 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
  70              		.loc 1 184 0 discriminator 4
  71 003a 0023     		mov	r3, #0
  72 003c 214A     		ldr	r2, .L6+40
  73 003e 1360     		str	r3, [r2]
 185:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  74              		.loc 1 185 0 discriminator 4
  75 0040 214A     		ldr	r2, .L6+44
  76 0042 2249     		ldr	r1, .L6+48
  77 0044 0A60     		str	r2, [r1]
 186:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
  78              		.loc 1 186 0 discriminator 4
  79 0046 2249     		ldr	r1, .L6+52
  80 0048 0A60     		str	r2, [r1]
 187:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 188:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
  81              		.loc 1 190 0 discriminator 4
  82 004a 2249     		ldr	r1, .L6+56
  83 004c 0A68     		ldr	r2, [r1]
  84 004e 8020     		mov	r0, #128
  85 0050 4002     		lsl	r0, r0, #9
  86 0052 0243     		orr	r2, r0
  87 0054 0A60     		str	r2, [r1]
 191:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 194:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 6


 197:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
  88              		.loc 1 197 0 discriminator 4
  89 0056 204A     		ldr	r2, .L6+60
  90 0058 1360     		str	r3, [r2]
 198:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
  91              		.loc 1 198 0 discriminator 4
  92 005a 204A     		ldr	r2, .L6+64
  93 005c 1360     		str	r3, [r2]
 199:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
  94              		.loc 1 199 0 discriminator 4
  95 005e 0122     		mov	r2, #1
  96 0060 1F4B     		ldr	r3, .L6+68
  97 0062 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 201:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
 203:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 205:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
  98              		.loc 1 206 0 discriminator 4
  99 0064 1F4A     		ldr	r2, .L6+72
 100 0066 1168     		ldr	r1, [r2]
 101              	.LVL2:
 207:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 208:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 209:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 214:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 216:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 220:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 221:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 102              		.loc 1 221 0 discriminator 4
 103 0068 1F4B     		ldr	r3, .L6+76
 104 006a 0B40     		and	r3, r1
 105 006c 8021     		mov	r1, #128
 106              	.LVL3:
 107 006e 8905     		lsl	r1, r1, #22
 108 0070 0B43     		orr	r3, r1
 109              	.LVL4:
 222:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 226:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 110              		.loc 1 226 0 discriminator 4
 111 0072 1360     		str	r3, [r2]
 112              	.LVL5:
 227:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 7


 229:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 113              		.loc 1 232 0 discriminator 4
 114 0074 0023     		mov	r3, #0
 115              	.LVL6:
 116 0076 0DE0     		b	.L3
 117              	.LVL7:
 118              	.L4:
 233:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 234:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 235:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 237:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 239:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 244:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 249:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 253:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 119              		.loc 1 253 0
 120 0078 9A00     		lsl	r2, r3, #2
 121 007a 1C49     		ldr	r1, .L6+80
 122 007c 8C46     		mov	ip, r1
 123 007e 6244     		add	r2, r2, ip
 124 0080 0021     		mov	r1, #0
 125 0082 1160     		str	r1, [r2]
 126              	.LVL8:
 254:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 255:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 256:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 257:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 259:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 262:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 264:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 265:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 267:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 268:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 269:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 270:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 8


 272:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 274:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 275:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 276:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 277:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 279:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 280:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 282:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 283:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 284:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 285:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 286:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 287:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 288:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 289:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 290:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 291:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 292:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 293:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 295:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 298:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 127              		.loc 1 298 0
 128 0084 5800     		lsl	r0, r3, #1
 129 0086 1A4A     		ldr	r2, .L6+84
 130 0088 8152     		strh	r1, [r0, r2]
 299:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 301:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 303:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 307:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 308:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 309:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 310:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 131              		.loc 1 311 0
 132 008a 9900     		lsl	r1, r3, #2
 133 008c 1948     		ldr	r0, .L6+88
 134 008e 1A4A     		ldr	r2, .L6+92
 135 0090 8850     		str	r0, [r1, r2]
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 136              		.loc 1 232 0
 137 0092 0133     		add	r3, r3, #1
 138              	.LVL9:
 139              	.L3:
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 140              		.loc 1 232 0 is_stmt 0 discriminator 1
 141 0094 002B     		cmp	r3, #0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 9


 142 0096 EFD0     		beq	.L4
 312:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 313:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 314:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 143              		.loc 1 314 0 is_stmt 1
 144              		@ sp needed
 145 0098 08BD     		pop	{r3, pc}
 146              	.L7:
 147 009a C046     		.align	2
 148              	.L6:
 149 009c 00000000 		.word	ADC_SAR_Seq_1_ISR
 150 00a0 20003A40 		.word	1077542944
 151 00a4 80033A40 		.word	1077543808
 152 00a8 C0021051 		.word	1360003776
 153 00ac C0020051 		.word	1358955200
 154 00b0 00003A40 		.word	1077542912
 155 00b4 84000080 		.word	-2147483516
 156 00b8 04003A40 		.word	1077542916
 157 00bc 0000FF07 		.word	134152192
 158 00c0 18003A40 		.word	1077542936
 159 00c4 1C003A40 		.word	1077542940
 160 00c8 04000400 		.word	262148
 161 00cc 10003A40 		.word	1077542928
 162 00d0 14003A40 		.word	1077542932
 163 00d4 00033A40 		.word	1077543680
 164 00d8 28023A40 		.word	1077543464
 165 00dc 38023A40 		.word	1077543480
 166 00e0 18023A40 		.word	1077543448
 167 00e4 30003A40 		.word	1077542960
 168 00e8 FEFFFFDF 		.word	-536870914
 169 00ec 80003A40 		.word	1077543040
 170 00f0 00000000 		.word	ADC_SAR_Seq_1_offset
 171 00f4 204E0000 		.word	20000
 172 00f8 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 173              		.cfi_endproc
 174              	.LFE2:
 175              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 176              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 177              		.align	2
 178              		.global	ADC_SAR_Seq_1_Enable
 179              		.code	16
 180              		.thumb_func
 181              		.type	ADC_SAR_Seq_1_Enable, %function
 182              	ADC_SAR_Seq_1_Enable:
 183              	.LFB3:
 315:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 316:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 320:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 323:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 326:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 10


 327:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 329:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 331:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 184              		.loc 1 331 0
 185              		.cfi_startproc
 186 0000 08B5     		push	{r3, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 3, -8
 189              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 190              		.loc 1 332 0
 191 0002 094B     		ldr	r3, .L11
 192 0004 1B68     		ldr	r3, [r3]
 193 0006 002B     		cmp	r3, #0
 194 0008 0CDB     		blt	.L8
 195              	.L10:
 333:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 196              		.loc 1 336 0 discriminator 1
 197 000a 084B     		ldr	r3, .L11+4
 198 000c 1B68     		ldr	r3, [r3]
 199 000e 002B     		cmp	r3, #0
 200 0010 FBDB     		blt	.L10
 337:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 338:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 340:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 342:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 201              		.loc 1 342 0
 202 0012 054A     		ldr	r2, .L11
 203 0014 1368     		ldr	r3, [r2]
 204 0016 8021     		mov	r1, #128
 205 0018 0906     		lsl	r1, r1, #24
 206 001a 0B43     		orr	r3, r1
 207 001c 1360     		str	r3, [r2]
 343:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 344:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 208              		.loc 1 345 0
 209 001e 0A20     		mov	r0, #10
 210 0020 FFF7FEFF 		bl	CyDelayUs
 211              	.LVL10:
 212              	.L8:
 346:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 347:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 213              		.loc 1 347 0
 214              		@ sp needed
 215 0024 08BD     		pop	{r3, pc}
 216              	.L12:
 217 0026 C046     		.align	2
 218              	.L11:
 219 0028 00003A40 		.word	1077542912
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 11


 220 002c 08023A40 		.word	1077543432
 221              		.cfi_endproc
 222              	.LFE3:
 223              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 224              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
 225              		.align	2
 226              		.global	ADC_SAR_Seq_1_Start
 227              		.code	16
 228              		.thumb_func
 229              		.type	ADC_SAR_Seq_1_Start, %function
 230              	ADC_SAR_Seq_1_Start:
 231              	.LFB1:
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
 232              		.loc 1 64 0
 233              		.cfi_startproc
 234 0000 08B5     		push	{r3, lr}
 235              		.cfi_def_cfa_offset 8
 236              		.cfi_offset 3, -8
 237              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 238              		.loc 1 66 0
 239 0002 064B     		ldr	r3, .L15
 240 0004 1B78     		ldrb	r3, [r3]
 241 0006 002B     		cmp	r3, #0
 242 0008 04D1     		bne	.L14
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
 243              		.loc 1 68 0
 244 000a FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
 245              	.LVL11:
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 246              		.loc 1 69 0
 247 000e 0122     		mov	r2, #1
 248 0010 024B     		ldr	r3, .L15
 249 0012 1A70     		strb	r2, [r3]
 250              	.L14:
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 251              		.loc 1 71 0
 252 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
 253              	.LVL12:
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 254              		.loc 1 72 0
 255              		@ sp needed
 256 0018 08BD     		pop	{r3, pc}
 257              	.L16:
 258 001a C046     		.align	2
 259              	.L15:
 260 001c 00000000 		.word	.LANCHOR0
 261              		.cfi_endproc
 262              	.LFE1:
 263              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
 264              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 265              		.align	2
 266              		.global	ADC_SAR_Seq_1_Stop
 267              		.code	16
 268              		.thumb_func
 269              		.type	ADC_SAR_Seq_1_Stop, %function
 270              	ADC_SAR_Seq_1_Stop:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 12


 271              	.LFB4:
 348:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 349:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 352:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 354:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 361:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 364:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 366:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 272              		.loc 1 366 0
 273              		.cfi_startproc
 367:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 274              		.loc 1 367 0
 275 0000 024A     		ldr	r2, .L18
 276 0002 1368     		ldr	r3, [r2]
 277 0004 5B00     		lsl	r3, r3, #1
 278 0006 5B08     		lsr	r3, r3, #1
 279 0008 1360     		str	r3, [r2]
 368:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 280              		.loc 1 368 0
 281              		@ sp needed
 282 000a 7047     		bx	lr
 283              	.L19:
 284              		.align	2
 285              	.L18:
 286 000c 00003A40 		.word	1077542912
 287              		.cfi_endproc
 288              	.LFE4:
 289              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 290              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 291              		.align	2
 292              		.global	ADC_SAR_Seq_1_StartConvert
 293              		.code	16
 294              		.thumb_func
 295              		.type	ADC_SAR_Seq_1_StartConvert, %function
 296              	ADC_SAR_Seq_1_StartConvert:
 297              	.LFB5:
 369:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 370:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 373:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 375:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 13


 378:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 387:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 390:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 298              		.loc 1 392 0
 299              		.cfi_startproc
 393:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 300              		.loc 1 394 0
 301 0000 034A     		ldr	r2, .L21
 302 0002 1368     		ldr	r3, [r2]
 303 0004 8021     		mov	r1, #128
 304 0006 4902     		lsl	r1, r1, #9
 305 0008 0B43     		orr	r3, r1
 306 000a 1360     		str	r3, [r2]
 395:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 397:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 399:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 307              		.loc 1 399 0
 308              		@ sp needed
 309 000c 7047     		bx	lr
 310              	.L22:
 311 000e C046     		.align	2
 312              	.L21:
 313 0010 04003A40 		.word	1077542916
 314              		.cfi_endproc
 315              	.LFE5:
 316              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 317              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 318              		.align	2
 319              		.global	ADC_SAR_Seq_1_StopConvert
 320              		.code	16
 321              		.thumb_func
 322              		.type	ADC_SAR_Seq_1_StopConvert, %function
 323              	ADC_SAR_Seq_1_StopConvert:
 324              	.LFB6:
 400:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 401:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 404:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 406:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 14


 408:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 409:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 412:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 415:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 325              		.loc 1 417 0
 326              		.cfi_startproc
 418:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 327              		.loc 1 419 0
 328 0000 024A     		ldr	r2, .L24
 329 0002 1168     		ldr	r1, [r2]
 330 0004 024B     		ldr	r3, .L24+4
 331 0006 0B40     		and	r3, r1
 332 0008 1360     		str	r3, [r2]
 420:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 333              		.loc 1 421 0
 334              		@ sp needed
 335 000a 7047     		bx	lr
 336              	.L25:
 337              		.align	2
 338              	.L24:
 339 000c 04003A40 		.word	1077542916
 340 0010 FFFFFEFF 		.word	-65537
 341              		.cfi_endproc
 342              	.LFE6:
 343              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 344              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 345              		.align	2
 346              		.global	ADC_SAR_Seq_1_IsEndConversion
 347              		.code	16
 348              		.thumb_func
 349              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 350              	ADC_SAR_Seq_1_IsEndConversion:
 351              	.LFB7:
 422:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 423:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 437:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 15


 438:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 445:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 449:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 352              		.loc 1 451 0
 353              		.cfi_startproc
 354              	.LVL13:
 355 0000 021C     		mov	r2, r0
 356              	.LVL14:
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 453:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 454:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 357              		.loc 1 454 0
 358 0002 8307     		lsl	r3, r0, #30
 359 0004 0CD0     		beq	.L30
 360              	.LVL15:
 361              	.L29:
 455:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 456:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 457:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 458:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 362              		.loc 1 458 0 discriminator 2
 363 0006 074B     		ldr	r3, .L31
 364 0008 1B68     		ldr	r3, [r3]
 365 000a 0120     		mov	r0, #1
 366 000c 1840     		and	r0, r3
 367              	.LVL16:
 459:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 368              		.loc 1 459 0 discriminator 2
 369 000e 01D1     		bne	.L28
 370              		.loc 1 459 0 is_stmt 0 discriminator 1
 371 0010 9307     		lsl	r3, r2, #30
 372 0012 F8D4     		bmi	.L29
 373              	.L28:
 460:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 461:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 374              		.loc 1 461 0 is_stmt 1
 375 0014 0028     		cmp	r0, #0
 376 0016 04D0     		beq	.L27
 462:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 463:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 377              		.loc 1 464 0
 378 0018 0122     		mov	r2, #1
 379              	.LVL17:
 380 001a 024B     		ldr	r3, .L31
 381 001c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 16


 382 001e 00E0     		b	.L27
 383              	.LVL18:
 384              	.L30:
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 385              		.loc 1 452 0
 386 0020 0020     		mov	r0, #0
 387              	.LVL19:
 388              	.L27:
 465:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 466:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 467:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 468:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 471:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 472:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 473:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 477:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 479:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 481:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 482:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 483:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 485:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 486:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 389              		.loc 1 486 0
 390              		@ sp needed
 391 0022 7047     		bx	lr
 392              	.L32:
 393              		.align	2
 394              	.L31:
 395 0024 10023A40 		.word	1077543440
 396              		.cfi_endproc
 397              	.LFE7:
 398              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 399              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 400              		.align	2
 401              		.global	ADC_SAR_Seq_1_GetResult16
 402              		.code	16
 403              		.thumb_func
 404              		.type	ADC_SAR_Seq_1_GetResult16, %function
 405              	ADC_SAR_Seq_1_GetResult16:
 406              	.LFB8:
 487:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 488:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 491:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 493:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 17


 496:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 500:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 503:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 407              		.loc 1 505 0
 408              		.cfi_startproc
 409              	.LVL20:
 410 0000 10B5     		push	{r4, lr}
 411              		.cfi_def_cfa_offset 8
 412              		.cfi_offset 4, -8
 413              		.cfi_offset 14, -4
 414 0002 041E     		sub	r4, r0, #0
 506:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 508:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 415              		.loc 1 509 0
 416 0004 02D0     		beq	.L34
 417              		.loc 1 509 0 is_stmt 0 discriminator 1
 418 0006 0020     		mov	r0, #0
 419              	.LVL21:
 420 0008 FFF7FEFF 		bl	CyHalt
 421              	.LVL22:
 422              	.L34:
 510:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 423              		.loc 1 511 0 is_stmt 1
 424 000c 002C     		cmp	r4, #0
 425 000e 07D1     		bne	.L36
 512:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 513:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 426              		.loc 1 513 0
 427 0010 A400     		lsl	r4, r4, #2
 428              	.LVL23:
 429 0012 054B     		ldr	r3, .L37
 430 0014 9C46     		mov	ip, r3
 431 0016 6444     		add	r4, r4, ip
 432 0018 2068     		ldr	r0, [r4]
 433 001a 0004     		lsl	r0, r0, #16
 434 001c 000C     		lsr	r0, r0, #16
 435              	.LVL24:
 436 001e 00E0     		b	.L35
 437              	.LVL25:
 438              	.L36:
 514:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 516:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 517:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 518:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 18


 521:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 439              		.loc 1 521 0
 440 0020 0020     		mov	r0, #0
 441              	.LVL26:
 442              	.L35:
 522:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 524:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 443              		.loc 1 525 0
 444 0022 00B2     		sxth	r0, r0
 445              	.LVL27:
 526:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 446              		.loc 1 526 0
 447              		@ sp needed
 448 0024 10BD     		pop	{r4, pc}
 449              	.L38:
 450 0026 C046     		.align	2
 451              	.L37:
 452 0028 80013A40 		.word	1077543296
 453              		.cfi_endproc
 454              	.LFE8:
 455              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 456              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 457              		.align	2
 458              		.global	ADC_SAR_Seq_1_SetChanMask
 459              		.code	16
 460              		.thumb_func
 461              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 462              	ADC_SAR_Seq_1_SetChanMask:
 463              	.LFB9:
 527:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 528:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 531:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 533:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 536:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 545:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 464              		.loc 1 550 0
 465              		.cfi_startproc
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 19


 466              	.LVL28:
 551:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 467              		.loc 1 551 0
 468 0000 0123     		mov	r3, #1
 469 0002 1840     		and	r0, r3
 470              	.LVL29:
 471 0004 014B     		ldr	r3, .L40
 472 0006 1860     		str	r0, [r3]
 552:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 473              		.loc 1 552 0
 474              		@ sp needed
 475 0008 7047     		bx	lr
 476              	.L41:
 477 000a C046     		.align	2
 478              	.L40:
 479 000c 20003A40 		.word	1077542944
 480              		.cfi_endproc
 481              	.LFE9:
 482              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 483              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 484              		.align	2
 485              		.global	ADC_SAR_Seq_1_SetLowLimit
 486              		.code	16
 487              		.thumb_func
 488              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 489              	ADC_SAR_Seq_1_SetLowLimit:
 490              	.LFB10:
 553:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 554:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 559:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 561:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 564:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 567:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 570:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 573:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 575:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 576:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 20


 583:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 589:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 592:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 491              		.loc 1 594 0
 492              		.cfi_startproc
 493              	.LVL30:
 595:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 494              		.loc 1 595 0
 495 0000 054A     		ldr	r2, .L43
 496 0002 1368     		ldr	r3, [r2]
 497 0004 1B0C     		lsr	r3, r3, #16
 498 0006 1B04     		lsl	r3, r3, #16
 499 0008 1360     		str	r3, [r2]
 596:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 500              		.loc 1 596 0
 501 000a 1368     		ldr	r3, [r2]
 502 000c 0004     		lsl	r0, r0, #16
 503              	.LVL31:
 504 000e 000C     		lsr	r0, r0, #16
 505 0010 1843     		orr	r0, r3
 506 0012 1060     		str	r0, [r2]
 597:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 507              		.loc 1 597 0
 508              		@ sp needed
 509 0014 7047     		bx	lr
 510              	.L44:
 511 0016 C046     		.align	2
 512              	.L43:
 513 0018 18003A40 		.word	1077542936
 514              		.cfi_endproc
 515              	.LFE10:
 516              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 517              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 518              		.align	2
 519              		.global	ADC_SAR_Seq_1_SetHighLimit
 520              		.code	16
 521              		.thumb_func
 522              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 523              	ADC_SAR_Seq_1_SetHighLimit:
 524              	.LFB11:
 598:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 599:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 604:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 21


 606:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 607:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 610:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 613:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 525              		.loc 1 615 0
 526              		.cfi_startproc
 527              	.LVL32:
 616:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 528              		.loc 1 616 0
 529 0000 044A     		ldr	r2, .L46
 530 0002 1368     		ldr	r3, [r2]
 531 0004 1B04     		lsl	r3, r3, #16
 532 0006 1B0C     		lsr	r3, r3, #16
 533 0008 1360     		str	r3, [r2]
 617:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 534              		.loc 1 617 0
 535 000a 1368     		ldr	r3, [r2]
 536 000c 0004     		lsl	r0, r0, #16
 537              	.LVL33:
 538 000e 1843     		orr	r0, r3
 539 0010 1060     		str	r0, [r2]
 618:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 540              		.loc 1 618 0
 541              		@ sp needed
 542 0012 7047     		bx	lr
 543              	.L47:
 544              		.align	2
 545              	.L46:
 546 0014 18003A40 		.word	1077542936
 547              		.cfi_endproc
 548              	.LFE11:
 549              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 550              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 551              		.align	2
 552              		.global	ADC_SAR_Seq_1_SetLimitMask
 553              		.code	16
 554              		.thumb_func
 555              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 556              	ADC_SAR_Seq_1_SetLimitMask:
 557              	.LFB12:
 619:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 620:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 628:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 22


 630:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 634:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 558              		.loc 1 639 0
 559              		.cfi_startproc
 560              	.LVL34:
 640:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 561              		.loc 1 640 0
 562 0000 0123     		mov	r3, #1
 563 0002 1840     		and	r0, r3
 564              	.LVL35:
 565 0004 014B     		ldr	r3, .L49
 566 0006 1860     		str	r0, [r3]
 641:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 567              		.loc 1 641 0
 568              		@ sp needed
 569 0008 7047     		bx	lr
 570              	.L50:
 571 000a C046     		.align	2
 572              	.L49:
 573 000c 38023A40 		.word	1077543480
 574              		.cfi_endproc
 575              	.LFE12:
 576              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 577              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 578              		.align	2
 579              		.global	ADC_SAR_Seq_1_SetSatMask
 580              		.code	16
 581              		.thumb_func
 582              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 583              	ADC_SAR_Seq_1_SetSatMask:
 584              	.LFB13:
 642:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 643:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 646:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 648:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 651:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 23


 660:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 585              		.loc 1 662 0
 586              		.cfi_startproc
 587              	.LVL36:
 663:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 588              		.loc 1 663 0
 589 0000 0123     		mov	r3, #1
 590 0002 1840     		and	r0, r3
 591              	.LVL37:
 592 0004 014B     		ldr	r3, .L52
 593 0006 1860     		str	r0, [r3]
 664:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 594              		.loc 1 664 0
 595              		@ sp needed
 596 0008 7047     		bx	lr
 597              	.L53:
 598 000a C046     		.align	2
 599              	.L52:
 600 000c 28023A40 		.word	1077543464
 601              		.cfi_endproc
 602              	.LFE13:
 603              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 604              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 605              		.align	2
 606              		.global	ADC_SAR_Seq_1_SetOffset
 607              		.code	16
 608              		.thumb_func
 609              		.type	ADC_SAR_Seq_1_SetOffset, %function
 610              	ADC_SAR_Seq_1_SetOffset:
 611              	.LFB14:
 665:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 669:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 671:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 677:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 682:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 685:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 688:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 24


 690:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 612              		.loc 1 690 0
 613              		.cfi_startproc
 614              	.LVL38:
 615 0000 38B5     		push	{r3, r4, r5, lr}
 616              		.cfi_def_cfa_offset 16
 617              		.cfi_offset 3, -16
 618              		.cfi_offset 4, -12
 619              		.cfi_offset 5, -8
 620              		.cfi_offset 14, -4
 621 0002 041C     		mov	r4, r0
 622 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 623              		.loc 1 692 0
 624 0006 0028     		cmp	r0, #0
 625 0008 02D0     		beq	.L55
 626              		.loc 1 692 0 is_stmt 0 discriminator 1
 627 000a 0020     		mov	r0, #0
 628              	.LVL39:
 629 000c FFF7FEFF 		bl	CyHalt
 630              	.LVL40:
 631              	.L55:
 693:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 694:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 632              		.loc 1 694 0 is_stmt 1
 633 0010 6400     		lsl	r4, r4, #1
 634              	.LVL41:
 635 0012 014B     		ldr	r3, .L56
 636 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 637              		.loc 1 695 0
 638              		@ sp needed
 639 0016 38BD     		pop	{r3, r4, r5, pc}
 640              	.L57:
 641              		.align	2
 642              	.L56:
 643 0018 00000000 		.word	ADC_SAR_Seq_1_offset
 644              		.cfi_endproc
 645              	.LFE14:
 646              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 647              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 648              		.align	2
 649              		.global	ADC_SAR_Seq_1_SetGain
 650              		.code	16
 651              		.thumb_func
 652              		.type	ADC_SAR_Seq_1_SetGain, %function
 653              	ADC_SAR_Seq_1_SetGain:
 654              	.LFB15:
 696:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 697:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 700:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 702:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 25


 704:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 711:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 715:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 718:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 722:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 655              		.loc 1 724 0
 656              		.cfi_startproc
 657              	.LVL42:
 658 0000 38B5     		push	{r3, r4, r5, lr}
 659              		.cfi_def_cfa_offset 16
 660              		.cfi_offset 3, -16
 661              		.cfi_offset 4, -12
 662              		.cfi_offset 5, -8
 663              		.cfi_offset 14, -4
 664 0002 041C     		mov	r4, r0
 665 0004 0D1C     		mov	r5, r1
 725:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 666              		.loc 1 726 0
 667 0006 0028     		cmp	r0, #0
 668 0008 02D0     		beq	.L59
 669              		.loc 1 726 0 is_stmt 0 discriminator 1
 670 000a 0020     		mov	r0, #0
 671              	.LVL43:
 672 000c FFF7FEFF 		bl	CyHalt
 673              	.LVL44:
 674              	.L59:
 727:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 675              		.loc 1 728 0 is_stmt 1
 676 0010 A400     		lsl	r4, r4, #2
 677              	.LVL45:
 678 0012 014B     		ldr	r3, .L60
 679 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 680              		.loc 1 729 0
 681              		@ sp needed
 682              	.LVL46:
 683 0016 38BD     		pop	{r3, r4, r5, pc}
 684              	.L61:
 685              		.align	2
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 26


 686              	.L60:
 687 0018 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 688              		.cfi_endproc
 689              	.LFE15:
 690              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 691              		.global	__aeabi_idiv
 692              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 693              		.align	2
 694              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 695              		.code	16
 696              		.thumb_func
 697              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 698              	ADC_SAR_Seq_1_CountsTo_mVolts:
 699              	.LFB16:
 730:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 733:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 734:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 739:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 743:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 747:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 750:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 755:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 700              		.loc 1 757 0
 701              		.cfi_startproc
 702              	.LVL47:
 703 0000 38B5     		push	{r3, r4, r5, lr}
 704              		.cfi_def_cfa_offset 16
 705              		.cfi_offset 3, -16
 706              		.cfi_offset 4, -12
 707              		.cfi_offset 5, -8
 708              		.cfi_offset 14, -4
 709 0002 041C     		mov	r4, r0
 710 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 760:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 27


 711              		.loc 1 761 0
 712 0006 0028     		cmp	r0, #0
 713 0008 02D0     		beq	.L63
 714              		.loc 1 761 0 is_stmt 0 discriminator 1
 715 000a 0020     		mov	r0, #0
 716              	.LVL48:
 717 000c FFF7FEFF 		bl	CyHalt
 718              	.LVL49:
 719              	.L63:
 762:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 767:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 769:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 771:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 720              		.loc 1 772 0 is_stmt 1
 721 0010 6300     		lsl	r3, r4, #1
 722 0012 0F4A     		ldr	r2, .L66
 723 0014 995A     		ldrh	r1, [r3, r2]
 724 0016 691A     		sub	r1, r5, r1
 725 0018 09B2     		sxth	r1, r1
 726              	.LVL50:
 773:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 727              		.loc 1 774 0
 728 001a 0E48     		ldr	r0, .L66+4
 729 001c 021C     		mov	r2, r0
 730 001e 4A43     		mul	r2, r1
 775:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 731              		.loc 1 775 0
 732 0020 0029     		cmp	r1, #0
 733 0022 06DD     		ble	.L64
 734              		.loc 1 775 0 is_stmt 0 discriminator 1
 735 0024 A300     		lsl	r3, r4, #2
 736 0026 0C49     		ldr	r1, .L66+8
 737              	.LVL51:
 738 0028 5B58     		ldr	r3, [r3, r1]
 739 002a D80F     		lsr	r0, r3, #31
 740 002c C018     		add	r0, r0, r3
 741 002e 4310     		asr	r3, r0, #1
 742 0030 06E0     		b	.L65
 743              	.LVL52:
 744              	.L64:
 745              		.loc 1 775 0 discriminator 2
 746 0032 A300     		lsl	r3, r4, #2
 747 0034 0849     		ldr	r1, .L66+8
 748              	.LVL53:
 749 0036 5B58     		ldr	r3, [r3, r1]
 750 0038 D80F     		lsr	r0, r3, #31
 751 003a C318     		add	r3, r0, r3
 752 003c 5B10     		asr	r3, r3, #1
 753 003e 5B42     		neg	r3, r3
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 28


 754              	.L65:
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 755              		.loc 1 774 0 is_stmt 1
 756 0040 D018     		add	r0, r2, r3
 776:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 757              		.loc 1 776 0
 758 0042 A400     		lsl	r4, r4, #2
 759              	.LVL54:
 760 0044 044B     		ldr	r3, .L66+8
 761 0046 E158     		ldr	r1, [r4, r3]
 762 0048 FFF7FEFF 		bl	__aeabi_idiv
 763              	.LVL55:
 777:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 778:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 764              		.loc 1 778 0
 765 004c 00B2     		sxth	r0, r0
 779:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 766              		.loc 1 779 0
 767              		@ sp needed
 768 004e 38BD     		pop	{r3, r4, r5, pc}
 769              	.L67:
 770              		.align	2
 771              	.L66:
 772 0050 00000000 		.word	ADC_SAR_Seq_1_offset
 773 0054 10270000 		.word	10000
 774 0058 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 775              		.cfi_endproc
 776              	.LFE16:
 777              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 778              		.global	__aeabi_lmul
 779              		.global	__aeabi_ldivmod
 780              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 781              		.align	2
 782              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 783              		.code	16
 784              		.thumb_func
 785              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 786              	ADC_SAR_Seq_1_CountsTo_uVolts:
 787              	.LFB17:
 780:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 781:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 786:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 790:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 794:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 797:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 29


 798:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 802:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 809:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 788              		.loc 1 811 0
 789              		.cfi_startproc
 790              	.LVL56:
 791 0000 38B5     		push	{r3, r4, r5, lr}
 792              		.cfi_def_cfa_offset 16
 793              		.cfi_offset 3, -16
 794              		.cfi_offset 4, -12
 795              		.cfi_offset 5, -8
 796              		.cfi_offset 14, -4
 797 0002 051C     		mov	r5, r0
 798 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 814:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 799              		.loc 1 815 0
 800 0006 0028     		cmp	r0, #0
 801 0008 02D0     		beq	.L69
 802              		.loc 1 815 0 is_stmt 0 discriminator 1
 803 000a 0020     		mov	r0, #0
 804              	.LVL57:
 805 000c FFF7FEFF 		bl	CyHalt
 806              	.LVL58:
 807              	.L69:
 816:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 817:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 821:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 823:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 825:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 808              		.loc 1 826 0 is_stmt 1
 809 0010 6A00     		lsl	r2, r5, #1
 810 0012 084B     		ldr	r3, .L70
 811 0014 D05A     		ldrh	r0, [r2, r3]
 812 0016 201A     		sub	r0, r4, r0
 813 0018 00B2     		sxth	r0, r0
 814              	.LVL59:
 827:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 30


 828:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 815              		.loc 1 828 0
 816 001a C117     		asr	r1, r0, #31
 817 001c 064A     		ldr	r2, .L70+4
 818 001e 0023     		mov	r3, #0
 819 0020 FFF7FEFF 		bl	__aeabi_lmul
 820              	.LVL60:
 821 0024 AD00     		lsl	r5, r5, #2
 822              	.LVL61:
 823 0026 054B     		ldr	r3, .L70+8
 824 0028 EA58     		ldr	r2, [r5, r3]
 825 002a D317     		asr	r3, r2, #31
 826 002c FFF7FEFF 		bl	__aeabi_ldivmod
 827              	.LVL62:
 829:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 828              		.loc 1 831 0
 829              		@ sp needed
 830 0030 38BD     		pop	{r3, r4, r5, pc}
 831              	.L71:
 832 0032 C046     		.align	2
 833              	.L70:
 834 0034 00000000 		.word	ADC_SAR_Seq_1_offset
 835 0038 80969800 		.word	10000000
 836 003c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 837              		.cfi_endproc
 838              	.LFE17:
 839              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 840              		.global	__aeabi_i2f
 841              		.global	__aeabi_fmul
 842              		.global	__aeabi_fdiv
 843              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 844              		.align	2
 845              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 846              		.code	16
 847              		.thumb_func
 848              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 849              	ADC_SAR_Seq_1_CountsTo_Volts:
 850              	.LFB18:
 832:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 833:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 838:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 842:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 846:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 31


 849:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 854:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 851              		.loc 1 856 0
 852              		.cfi_startproc
 853              	.LVL63:
 854 0000 38B5     		push	{r3, r4, r5, lr}
 855              		.cfi_def_cfa_offset 16
 856              		.cfi_offset 3, -16
 857              		.cfi_offset 4, -12
 858              		.cfi_offset 5, -8
 859              		.cfi_offset 14, -4
 860 0002 041C     		mov	r4, r0
 861 0004 0D1C     		mov	r5, r1
 857:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 859:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 862              		.loc 1 860 0
 863 0006 0028     		cmp	r0, #0
 864 0008 02D0     		beq	.L73
 865              		.loc 1 860 0 is_stmt 0 discriminator 1
 866 000a 0020     		mov	r0, #0
 867              	.LVL64:
 868 000c FFF7FEFF 		bl	CyHalt
 869              	.LVL65:
 870              	.L73:
 861:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 862:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 866:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 868:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 870:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 871              		.loc 1 871 0 is_stmt 1
 872 0010 6200     		lsl	r2, r4, #1
 873 0012 0A4B     		ldr	r3, .L74
 874 0014 D05A     		ldrh	r0, [r2, r3]
 875 0016 281A     		sub	r0, r5, r0
 876 0018 00B2     		sxth	r0, r0
 877              	.LVL66:
 872:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 873:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 878              		.loc 1 873 0
 879 001a FFF7FEFF 		bl	__aeabi_i2f
 880              	.LVL67:
 881 001e 0849     		ldr	r1, .L74+4
 882 0020 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 32


 883              	.LVL68:
 884 0024 051C     		add	r5, r0, #0
 885 0026 A400     		lsl	r4, r4, #2
 886              	.LVL69:
 887 0028 064B     		ldr	r3, .L74+8
 888 002a E058     		ldr	r0, [r4, r3]
 889 002c FFF7FEFF 		bl	__aeabi_i2f
 890              	.LVL70:
 891 0030 011C     		add	r1, r0, #0
 892 0032 281C     		add	r0, r5, #0
 893 0034 FFF7FEFF 		bl	__aeabi_fdiv
 894              	.LVL71:
 874:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 875:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 876:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 895              		.loc 1 876 0
 896              		@ sp needed
 897 0038 38BD     		pop	{r3, r4, r5, pc}
 898              	.L75:
 899 003a C046     		.align	2
 900              	.L74:
 901 003c 00000000 		.word	ADC_SAR_Seq_1_offset
 902 0040 00002041 		.word	1092616192
 903 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 904              		.cfi_endproc
 905              	.LFE18:
 906              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 907              		.comm	ADC_SAR_Seq_1_countsPer10Volt,4,4
 908              		.comm	ADC_SAR_Seq_1_offset,2,4
 909              		.global	ADC_SAR_Seq_1_initVar
 910              		.bss
 911              		.set	.LANCHOR0,. + 0
 912              		.type	ADC_SAR_Seq_1_initVar, %object
 913              		.size	ADC_SAR_Seq_1_initVar, 1
 914              	ADC_SAR_Seq_1_initVar:
 915 0000 00       		.space	1
 916              		.text
 917              	.Letext0:
 918              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 919              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 920              		.section	.debug_info,"",%progbits
 921              	.Ldebug_info0:
 922 0000 8D050000 		.4byte	0x58d
 923 0004 0400     		.2byte	0x4
 924 0006 00000000 		.4byte	.Ldebug_abbrev0
 925 000a 04       		.byte	0x4
 926 000b 01       		.uleb128 0x1
 927 000c C0020000 		.4byte	.LASF61
 928 0010 01       		.byte	0x1
 929 0011 45020000 		.4byte	.LASF62
 930 0015 9A010000 		.4byte	.LASF63
 931 0019 00000000 		.4byte	.Ldebug_ranges0+0
 932 001d 00000000 		.4byte	0
 933 0021 00000000 		.4byte	.Ldebug_line0
 934 0025 02       		.uleb128 0x2
 935 0026 01       		.byte	0x1
 936 0027 06       		.byte	0x6
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 33


 937 0028 DA000000 		.4byte	.LASF0
 938 002c 02       		.uleb128 0x2
 939 002d 01       		.byte	0x1
 940 002e 08       		.byte	0x8
 941 002f A5030000 		.4byte	.LASF1
 942 0033 02       		.uleb128 0x2
 943 0034 02       		.byte	0x2
 944 0035 05       		.byte	0x5
 945 0036 B3030000 		.4byte	.LASF2
 946 003a 02       		.uleb128 0x2
 947 003b 02       		.byte	0x2
 948 003c 07       		.byte	0x7
 949 003d F9010000 		.4byte	.LASF3
 950 0041 02       		.uleb128 0x2
 951 0042 04       		.byte	0x4
 952 0043 05       		.byte	0x5
 953 0044 25010000 		.4byte	.LASF4
 954 0048 02       		.uleb128 0x2
 955 0049 04       		.byte	0x4
 956 004a 07       		.byte	0x7
 957 004b D7010000 		.4byte	.LASF5
 958 004f 02       		.uleb128 0x2
 959 0050 08       		.byte	0x8
 960 0051 05       		.byte	0x5
 961 0052 CC000000 		.4byte	.LASF6
 962 0056 02       		.uleb128 0x2
 963 0057 08       		.byte	0x8
 964 0058 07       		.byte	0x7
 965 0059 86000000 		.4byte	.LASF7
 966 005d 03       		.uleb128 0x3
 967 005e 04       		.byte	0x4
 968 005f 05       		.byte	0x5
 969 0060 696E7400 		.ascii	"int\000"
 970 0064 02       		.uleb128 0x2
 971 0065 04       		.byte	0x4
 972 0066 07       		.byte	0x7
 973 0067 8D010000 		.4byte	.LASF8
 974 006b 04       		.uleb128 0x4
 975 006c 2E010000 		.4byte	.LASF9
 976 0070 02       		.byte	0x2
 977 0071 C2       		.byte	0xc2
 978 0072 2C000000 		.4byte	0x2c
 979 0076 04       		.uleb128 0x4
 980 0077 15000000 		.4byte	.LASF10
 981 007b 02       		.byte	0x2
 982 007c C3       		.byte	0xc3
 983 007d 3A000000 		.4byte	0x3a
 984 0081 04       		.uleb128 0x4
 985 0082 45010000 		.4byte	.LASF11
 986 0086 02       		.byte	0x2
 987 0087 C4       		.byte	0xc4
 988 0088 48000000 		.4byte	0x48
 989 008c 04       		.uleb128 0x4
 990 008d 79040000 		.4byte	.LASF12
 991 0091 02       		.byte	0x2
 992 0092 C6       		.byte	0xc6
 993 0093 33000000 		.4byte	0x33
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 34


 994 0097 04       		.uleb128 0x4
 995 0098 01010000 		.4byte	.LASF13
 996 009c 02       		.byte	0x2
 997 009d C7       		.byte	0xc7
 998 009e 41000000 		.4byte	0x41
 999 00a2 04       		.uleb128 0x4
 1000 00a3 6E020000 		.4byte	.LASF14
 1001 00a7 02       		.byte	0x2
 1002 00a8 C8       		.byte	0xc8
 1003 00a9 AD000000 		.4byte	0xad
 1004 00ad 02       		.uleb128 0x2
 1005 00ae 04       		.byte	0x4
 1006 00af 04       		.byte	0x4
 1007 00b0 65030000 		.4byte	.LASF15
 1008 00b4 02       		.uleb128 0x2
 1009 00b5 08       		.byte	0x8
 1010 00b6 04       		.byte	0x4
 1011 00b7 3E010000 		.4byte	.LASF16
 1012 00bb 04       		.uleb128 0x4
 1013 00bc 4E030000 		.4byte	.LASF17
 1014 00c0 02       		.byte	0x2
 1015 00c1 CD       		.byte	0xcd
 1016 00c2 4F000000 		.4byte	0x4f
 1017 00c6 02       		.uleb128 0x2
 1018 00c7 01       		.byte	0x1
 1019 00c8 08       		.byte	0x8
 1020 00c9 FF030000 		.4byte	.LASF18
 1021 00cd 05       		.uleb128 0x5
 1022 00ce 3F020000 		.4byte	.LASF19
 1023 00d2 02       		.byte	0x2
 1024 00d3 6E01     		.2byte	0x16e
 1025 00d5 D9000000 		.4byte	0xd9
 1026 00d9 06       		.uleb128 0x6
 1027 00da 81000000 		.4byte	0x81
 1028 00de 05       		.uleb128 0x5
 1029 00df 04040000 		.4byte	.LASF20
 1030 00e3 02       		.byte	0x2
 1031 00e4 7E01     		.2byte	0x17e
 1032 00e6 EA000000 		.4byte	0xea
 1033 00ea 07       		.uleb128 0x7
 1034 00eb 04       		.byte	0x4
 1035 00ec F0000000 		.4byte	0xf0
 1036 00f0 08       		.uleb128 0x8
 1037 00f1 02       		.uleb128 0x2
 1038 00f2 04       		.byte	0x4
 1039 00f3 07       		.byte	0x7
 1040 00f4 76020000 		.4byte	.LASF21
 1041 00f8 09       		.uleb128 0x9
 1042 00f9 1C000000 		.4byte	.LASF25
 1043 00fd 01       		.byte	0x1
 1044 00fe 5E       		.byte	0x5e
 1045 00ff 00000000 		.4byte	.LFB2
 1046 0103 FC000000 		.4byte	.LFE2-.LFB2
 1047 0107 01       		.uleb128 0x1
 1048 0108 9C       		.byte	0x9c
 1049 0109 62010000 		.4byte	0x162
 1050 010d 0A       		.uleb128 0xa
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 35


 1051 010e F4030000 		.4byte	.LASF22
 1052 0112 01       		.byte	0x1
 1053 0113 60       		.byte	0x60
 1054 0114 81000000 		.4byte	0x81
 1055 0118 00000000 		.4byte	.LLST0
 1056 011c 0A       		.uleb128 0xa
 1057 011d EF010000 		.4byte	.LASF23
 1058 0121 01       		.byte	0x1
 1059 0122 61       		.byte	0x61
 1060 0123 81000000 		.4byte	0x81
 1061 0127 1F000000 		.4byte	.LLST1
 1062 012b 0A       		.uleb128 0xa
 1063 012c 37000000 		.4byte	.LASF24
 1064 0130 01       		.byte	0x1
 1065 0131 62       		.byte	0x62
 1066 0132 97000000 		.4byte	0x97
 1067 0136 5B000000 		.4byte	.LLST2
 1068 013a 0B       		.uleb128 0xb
 1069 013b 0A000000 		.4byte	.LVL0
 1070 013f 42050000 		.4byte	0x542
 1071 0143 52010000 		.4byte	0x152
 1072 0147 0C       		.uleb128 0xc
 1073 0148 01       		.uleb128 0x1
 1074 0149 51       		.byte	0x51
 1075 014a 01       		.uleb128 0x1
 1076 014b 33       		.byte	0x33
 1077 014c 0C       		.uleb128 0xc
 1078 014d 01       		.uleb128 0x1
 1079 014e 50       		.byte	0x50
 1080 014f 01       		.uleb128 0x1
 1081 0150 40       		.byte	0x40
 1082 0151 00       		.byte	0
 1083 0152 0D       		.uleb128 0xd
 1084 0153 12000000 		.4byte	.LVL1
 1085 0157 58050000 		.4byte	0x558
 1086 015b 0C       		.uleb128 0xc
 1087 015c 01       		.uleb128 0x1
 1088 015d 50       		.byte	0x50
 1089 015e 01       		.uleb128 0x1
 1090 015f 40       		.byte	0x40
 1091 0160 00       		.byte	0
 1092 0161 00       		.byte	0
 1093 0162 0E       		.uleb128 0xe
 1094 0163 9D000000 		.4byte	.LASF26
 1095 0167 01       		.byte	0x1
 1096 0168 4A01     		.2byte	0x14a
 1097 016a 00000000 		.4byte	.LFB3
 1098 016e 30000000 		.4byte	.LFE3-.LFB3
 1099 0172 01       		.uleb128 0x1
 1100 0173 9C       		.byte	0x9c
 1101 0174 88010000 		.4byte	0x188
 1102 0178 0D       		.uleb128 0xd
 1103 0179 24000000 		.4byte	.LVL10
 1104 017d 72050000 		.4byte	0x572
 1105 0181 0C       		.uleb128 0xc
 1106 0182 01       		.uleb128 0x1
 1107 0183 50       		.byte	0x50
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 36


 1108 0184 01       		.uleb128 0x1
 1109 0185 3A       		.byte	0x3a
 1110 0186 00       		.byte	0
 1111 0187 00       		.byte	0
 1112 0188 09       		.uleb128 0x9
 1113 0189 72000000 		.4byte	.LASF27
 1114 018d 01       		.byte	0x1
 1115 018e 3F       		.byte	0x3f
 1116 018f 00000000 		.4byte	.LFB1
 1117 0193 20000000 		.4byte	.LFE1-.LFB1
 1118 0197 01       		.uleb128 0x1
 1119 0198 9C       		.byte	0x9c
 1120 0199 B0010000 		.4byte	0x1b0
 1121 019d 0F       		.uleb128 0xf
 1122 019e 0E000000 		.4byte	.LVL11
 1123 01a2 F8000000 		.4byte	0xf8
 1124 01a6 0F       		.uleb128 0xf
 1125 01a7 18000000 		.4byte	.LVL12
 1126 01ab 62010000 		.4byte	0x162
 1127 01af 00       		.byte	0
 1128 01b0 10       		.uleb128 0x10
 1129 01b1 81030000 		.4byte	.LASF28
 1130 01b5 01       		.byte	0x1
 1131 01b6 6D01     		.2byte	0x16d
 1132 01b8 00000000 		.4byte	.LFB4
 1133 01bc 10000000 		.4byte	.LFE4-.LFB4
 1134 01c0 01       		.uleb128 0x1
 1135 01c1 9C       		.byte	0x9c
 1136 01c2 10       		.uleb128 0x10
 1137 01c3 3E000000 		.4byte	.LASF29
 1138 01c7 01       		.byte	0x1
 1139 01c8 8701     		.2byte	0x187
 1140 01ca 00000000 		.4byte	.LFB5
 1141 01ce 14000000 		.4byte	.LFE5-.LFB5
 1142 01d2 01       		.uleb128 0x1
 1143 01d3 9C       		.byte	0x9c
 1144 01d4 10       		.uleb128 0x10
 1145 01d5 A6020000 		.4byte	.LASF30
 1146 01d9 01       		.byte	0x1
 1147 01da A001     		.2byte	0x1a0
 1148 01dc 00000000 		.4byte	.LFB6
 1149 01e0 14000000 		.4byte	.LFE6-.LFB6
 1150 01e4 01       		.uleb128 0x1
 1151 01e5 9C       		.byte	0x9c
 1152 01e6 11       		.uleb128 0x11
 1153 01e7 88020000 		.4byte	.LASF32
 1154 01eb 01       		.byte	0x1
 1155 01ec C201     		.2byte	0x1c2
 1156 01ee 81000000 		.4byte	0x81
 1157 01f2 00000000 		.4byte	.LFB7
 1158 01f6 28000000 		.4byte	.LFE7-.LFB7
 1159 01fa 01       		.uleb128 0x1
 1160 01fb 9C       		.byte	0x9c
 1161 01fc 21020000 		.4byte	0x221
 1162 0200 12       		.uleb128 0x12
 1163 0201 6F010000 		.4byte	.LASF34
 1164 0205 01       		.byte	0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 37


 1165 0206 C201     		.2byte	0x1c2
 1166 0208 81000000 		.4byte	0x81
 1167 020c 71000000 		.4byte	.LLST3
 1168 0210 13       		.uleb128 0x13
 1169 0211 5A040000 		.4byte	.LASF31
 1170 0215 01       		.byte	0x1
 1171 0216 C401     		.2byte	0x1c4
 1172 0218 81000000 		.4byte	0x81
 1173 021c B6000000 		.4byte	.LLST4
 1174 0220 00       		.byte	0
 1175 0221 11       		.uleb128 0x11
 1176 0222 B2000000 		.4byte	.LASF33
 1177 0226 01       		.byte	0x1
 1178 0227 F801     		.2byte	0x1f8
 1179 0229 8C000000 		.4byte	0x8c
 1180 022d 00000000 		.4byte	.LFB8
 1181 0231 2C000000 		.4byte	.LFE8-.LFB8
 1182 0235 01       		.uleb128 0x1
 1183 0236 9C       		.byte	0x9c
 1184 0237 6B020000 		.4byte	0x26b
 1185 023b 12       		.uleb128 0x12
 1186 023c FA030000 		.4byte	.LASF35
 1187 0240 01       		.byte	0x1
 1188 0241 F801     		.2byte	0x1f8
 1189 0243 81000000 		.4byte	0x81
 1190 0247 EC000000 		.4byte	.LLST5
 1191 024b 13       		.uleb128 0x13
 1192 024c 9A040000 		.4byte	.LASF36
 1193 0250 01       		.byte	0x1
 1194 0251 FA01     		.2byte	0x1fa
 1195 0253 81000000 		.4byte	0x81
 1196 0257 31010000 		.4byte	.LLST6
 1197 025b 0D       		.uleb128 0xd
 1198 025c 0C000000 		.4byte	.LVL22
 1199 0260 83050000 		.4byte	0x583
 1200 0264 0C       		.uleb128 0xc
 1201 0265 01       		.uleb128 0x1
 1202 0266 50       		.byte	0x50
 1203 0267 01       		.uleb128 0x1
 1204 0268 30       		.byte	0x30
 1205 0269 00       		.byte	0
 1206 026a 00       		.byte	0
 1207 026b 0E       		.uleb128 0xe
 1208 026c DA030000 		.4byte	.LASF37
 1209 0270 01       		.byte	0x1
 1210 0271 2502     		.2byte	0x225
 1211 0273 00000000 		.4byte	.LFB9
 1212 0277 10000000 		.4byte	.LFE9-.LFB9
 1213 027b 01       		.uleb128 0x1
 1214 027c 9C       		.byte	0x9c
 1215 027d 92020000 		.4byte	0x292
 1216 0281 12       		.uleb128 0x12
 1217 0282 4C010000 		.4byte	.LASF38
 1218 0286 01       		.byte	0x1
 1219 0287 2502     		.2byte	0x225
 1220 0289 81000000 		.4byte	0x81
 1221 028d 4F010000 		.4byte	.LLST7
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 38


 1222 0291 00       		.byte	0
 1223 0292 0E       		.uleb128 0xe
 1224 0293 11040000 		.4byte	.LASF39
 1225 0297 01       		.byte	0x1
 1226 0298 5102     		.2byte	0x251
 1227 029a 00000000 		.4byte	.LFB10
 1228 029e 1C000000 		.4byte	.LFE10-.LFB10
 1229 02a2 01       		.uleb128 0x1
 1230 02a3 9C       		.byte	0x9c
 1231 02a4 B9020000 		.4byte	0x2b9
 1232 02a8 12       		.uleb128 0x12
 1233 02a9 7F020000 		.4byte	.LASF40
 1234 02ad 01       		.byte	0x1
 1235 02ae 5102     		.2byte	0x251
 1236 02b0 81000000 		.4byte	0x81
 1237 02b4 70010000 		.4byte	.LLST8
 1238 02b8 00       		.byte	0
 1239 02b9 0E       		.uleb128 0xe
 1240 02ba E6000000 		.4byte	.LASF41
 1241 02be 01       		.byte	0x1
 1242 02bf 6602     		.2byte	0x266
 1243 02c1 00000000 		.4byte	.LFB11
 1244 02c5 18000000 		.4byte	.LFE11-.LFB11
 1245 02c9 01       		.uleb128 0x1
 1246 02ca 9C       		.byte	0x9c
 1247 02cb E0020000 		.4byte	0x2e0
 1248 02cf 12       		.uleb128 0x12
 1249 02d0 94030000 		.4byte	.LASF42
 1250 02d4 01       		.byte	0x1
 1251 02d5 6602     		.2byte	0x266
 1252 02d7 81000000 		.4byte	0x81
 1253 02db 91010000 		.4byte	.LLST9
 1254 02df 00       		.byte	0
 1255 02e0 0E       		.uleb128 0xe
 1256 02e1 7F040000 		.4byte	.LASF43
 1257 02e5 01       		.byte	0x1
 1258 02e6 7E02     		.2byte	0x27e
 1259 02e8 00000000 		.4byte	.LFB12
 1260 02ec 10000000 		.4byte	.LFE12-.LFB12
 1261 02f0 01       		.uleb128 0x1
 1262 02f1 9C       		.byte	0x9c
 1263 02f2 07030000 		.4byte	0x307
 1264 02f6 12       		.uleb128 0x12
 1265 02f7 4C010000 		.4byte	.LASF38
 1266 02fb 01       		.byte	0x1
 1267 02fc 7E02     		.2byte	0x27e
 1268 02fe 81000000 		.4byte	0x81
 1269 0302 B2010000 		.4byte	.LLST10
 1270 0306 00       		.byte	0
 1271 0307 0E       		.uleb128 0xe
 1272 0308 59000000 		.4byte	.LASF44
 1273 030c 01       		.byte	0x1
 1274 030d 9502     		.2byte	0x295
 1275 030f 00000000 		.4byte	.LFB13
 1276 0313 10000000 		.4byte	.LFE13-.LFB13
 1277 0317 01       		.uleb128 0x1
 1278 0318 9C       		.byte	0x9c
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 39


 1279 0319 2E030000 		.4byte	0x32e
 1280 031d 12       		.uleb128 0x12
 1281 031e 4C010000 		.4byte	.LASF38
 1282 0322 01       		.byte	0x1
 1283 0323 9502     		.2byte	0x295
 1284 0325 81000000 		.4byte	0x81
 1285 0329 D3010000 		.4byte	.LLST11
 1286 032d 00       		.byte	0
 1287 032e 0E       		.uleb128 0xe
 1288 032f 61040000 		.4byte	.LASF45
 1289 0333 01       		.byte	0x1
 1290 0334 B102     		.2byte	0x2b1
 1291 0336 00000000 		.4byte	.LFB14
 1292 033a 1C000000 		.4byte	.LFE14-.LFB14
 1293 033e 01       		.uleb128 0x1
 1294 033f 9C       		.byte	0x9c
 1295 0340 74030000 		.4byte	0x374
 1296 0344 12       		.uleb128 0x12
 1297 0345 FA030000 		.4byte	.LASF35
 1298 0349 01       		.byte	0x1
 1299 034a B102     		.2byte	0x2b1
 1300 034c 81000000 		.4byte	0x81
 1301 0350 F4010000 		.4byte	.LLST12
 1302 0354 12       		.uleb128 0x12
 1303 0355 2B040000 		.4byte	.LASF46
 1304 0359 01       		.byte	0x1
 1305 035a B102     		.2byte	0x2b1
 1306 035c 8C000000 		.4byte	0x8c
 1307 0360 20020000 		.4byte	.LLST13
 1308 0364 0D       		.uleb128 0xd
 1309 0365 10000000 		.4byte	.LVL40
 1310 0369 83050000 		.4byte	0x583
 1311 036d 0C       		.uleb128 0xc
 1312 036e 01       		.uleb128 0x1
 1313 036f 50       		.byte	0x50
 1314 0370 01       		.uleb128 0x1
 1315 0371 30       		.byte	0x30
 1316 0372 00       		.byte	0
 1317 0373 00       		.byte	0
 1318 0374 0E       		.uleb128 0xe
 1319 0375 6B030000 		.4byte	.LASF47
 1320 0379 01       		.byte	0x1
 1321 037a D302     		.2byte	0x2d3
 1322 037c 00000000 		.4byte	.LFB15
 1323 0380 1C000000 		.4byte	.LFE15-.LFB15
 1324 0384 01       		.uleb128 0x1
 1325 0385 9C       		.byte	0x9c
 1326 0386 BA030000 		.4byte	0x3ba
 1327 038a 12       		.uleb128 0x12
 1328 038b FA030000 		.4byte	.LASF35
 1329 038f 01       		.byte	0x1
 1330 0390 D302     		.2byte	0x2d3
 1331 0392 81000000 		.4byte	0x81
 1332 0396 41020000 		.4byte	.LLST14
 1333 039a 12       		.uleb128 0x12
 1334 039b 2F000000 		.4byte	.LASF48
 1335 039f 01       		.byte	0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 40


 1336 03a0 D302     		.2byte	0x2d3
 1337 03a2 97000000 		.4byte	0x97
 1338 03a6 6D020000 		.4byte	.LLST15
 1339 03aa 0D       		.uleb128 0xd
 1340 03ab 10000000 		.4byte	.LVL44
 1341 03af 83050000 		.4byte	0x583
 1342 03b3 0C       		.uleb128 0xc
 1343 03b4 01       		.uleb128 0x1
 1344 03b5 50       		.byte	0x50
 1345 03b6 01       		.uleb128 0x1
 1346 03b7 30       		.byte	0x30
 1347 03b8 00       		.byte	0
 1348 03b9 00       		.byte	0
 1349 03ba 14       		.uleb128 0x14
 1350 03bb 51010000 		.4byte	.LASF49
 1351 03bf 01       		.byte	0x1
 1352 03c0 F402     		.2byte	0x2f4
 1353 03c2 8C000000 		.4byte	0x8c
 1354 03c6 00000000 		.4byte	.LFB16
 1355 03ca 5C000000 		.4byte	.LFE16-.LFB16
 1356 03ce 01       		.uleb128 0x1
 1357 03cf 9C       		.byte	0x9c
 1358 03d0 12040000 		.4byte	0x412
 1359 03d4 12       		.uleb128 0x12
 1360 03d5 FA030000 		.4byte	.LASF35
 1361 03d9 01       		.byte	0x1
 1362 03da F402     		.2byte	0x2f4
 1363 03dc 81000000 		.4byte	0x81
 1364 03e0 9D020000 		.4byte	.LLST16
 1365 03e4 12       		.uleb128 0x12
 1366 03e5 32040000 		.4byte	.LASF50
 1367 03e9 01       		.byte	0x1
 1368 03ea F402     		.2byte	0x2f4
 1369 03ec 8C000000 		.4byte	0x8c
 1370 03f0 C9020000 		.4byte	.LLST17
 1371 03f4 15       		.uleb128 0x15
 1372 03f5 38020000 		.4byte	.LASF51
 1373 03f9 01       		.byte	0x1
 1374 03fa F602     		.2byte	0x2f6
 1375 03fc 8C000000 		.4byte	0x8c
 1376 0400 01       		.uleb128 0x1
 1377 0401 50       		.byte	0x50
 1378 0402 0D       		.uleb128 0xd
 1379 0403 10000000 		.4byte	.LVL49
 1380 0407 83050000 		.4byte	0x583
 1381 040b 0C       		.uleb128 0xc
 1382 040c 01       		.uleb128 0x1
 1383 040d 50       		.byte	0x50
 1384 040e 01       		.uleb128 0x1
 1385 040f 30       		.byte	0x30
 1386 0410 00       		.byte	0
 1387 0411 00       		.byte	0
 1388 0412 14       		.uleb128 0x14
 1389 0413 07010000 		.4byte	.LASF52
 1390 0417 01       		.byte	0x1
 1391 0418 2A03     		.2byte	0x32a
 1392 041a 97000000 		.4byte	0x97
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 41


 1393 041e 00000000 		.4byte	.LFB17
 1394 0422 40000000 		.4byte	.LFE17-.LFB17
 1395 0426 01       		.uleb128 0x1
 1396 0427 9C       		.byte	0x9c
 1397 0428 68040000 		.4byte	0x468
 1398 042c 12       		.uleb128 0x12
 1399 042d FA030000 		.4byte	.LASF35
 1400 0431 01       		.byte	0x1
 1401 0432 2A03     		.2byte	0x32a
 1402 0434 81000000 		.4byte	0x81
 1403 0438 00030000 		.4byte	.LLST18
 1404 043c 12       		.uleb128 0x12
 1405 043d 32040000 		.4byte	.LASF50
 1406 0441 01       		.byte	0x1
 1407 0442 2A03     		.2byte	0x32a
 1408 0444 8C000000 		.4byte	0x8c
 1409 0448 2C030000 		.4byte	.LLST19
 1410 044c 16       		.uleb128 0x16
 1411 044d D0010000 		.4byte	.LASF64
 1412 0451 01       		.byte	0x1
 1413 0452 2C03     		.2byte	0x32c
 1414 0454 BB000000 		.4byte	0xbb
 1415 0458 0D       		.uleb128 0xd
 1416 0459 10000000 		.4byte	.LVL58
 1417 045d 83050000 		.4byte	0x583
 1418 0461 0C       		.uleb128 0xc
 1419 0462 01       		.uleb128 0x1
 1420 0463 50       		.byte	0x50
 1421 0464 01       		.uleb128 0x1
 1422 0465 30       		.byte	0x30
 1423 0466 00       		.byte	0
 1424 0467 00       		.byte	0
 1425 0468 14       		.uleb128 0x14
 1426 0469 BD030000 		.4byte	.LASF53
 1427 046d 01       		.byte	0x1
 1428 046e 5703     		.2byte	0x357
 1429 0470 A2000000 		.4byte	0xa2
 1430 0474 00000000 		.4byte	.LFB18
 1431 0478 48000000 		.4byte	.LFE18-.LFB18
 1432 047c 01       		.uleb128 0x1
 1433 047d 9C       		.byte	0x9c
 1434 047e C0040000 		.4byte	0x4c0
 1435 0482 12       		.uleb128 0x12
 1436 0483 FA030000 		.4byte	.LASF35
 1437 0487 01       		.byte	0x1
 1438 0488 5703     		.2byte	0x357
 1439 048a 81000000 		.4byte	0x81
 1440 048e 58030000 		.4byte	.LLST20
 1441 0492 12       		.uleb128 0x12
 1442 0493 32040000 		.4byte	.LASF50
 1443 0497 01       		.byte	0x1
 1444 0498 5703     		.2byte	0x357
 1445 049a 8C000000 		.4byte	0x8c
 1446 049e 84030000 		.4byte	.LLST21
 1447 04a2 15       		.uleb128 0x15
 1448 04a3 E9010000 		.4byte	.LASF54
 1449 04a7 01       		.byte	0x1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 42


 1450 04a8 5903     		.2byte	0x359
 1451 04aa A2000000 		.4byte	0xa2
 1452 04ae 01       		.uleb128 0x1
 1453 04af 50       		.byte	0x50
 1454 04b0 0D       		.uleb128 0xd
 1455 04b1 10000000 		.4byte	.LVL65
 1456 04b5 83050000 		.4byte	0x583
 1457 04b9 0C       		.uleb128 0xc
 1458 04ba 01       		.uleb128 0x1
 1459 04bb 50       		.byte	0x50
 1460 04bc 01       		.uleb128 0x1
 1461 04bd 30       		.byte	0x30
 1462 04be 00       		.byte	0
 1463 04bf 00       		.byte	0
 1464 04c0 17       		.uleb128 0x17
 1465 04c1 81000000 		.4byte	0x81
 1466 04c5 D0040000 		.4byte	0x4d0
 1467 04c9 18       		.uleb128 0x18
 1468 04ca F1000000 		.4byte	0xf1
 1469 04ce 00       		.byte	0
 1470 04cf 00       		.byte	0
 1471 04d0 19       		.uleb128 0x19
 1472 04d1 1B020000 		.4byte	.LASF55
 1473 04d5 01       		.byte	0x1
 1474 04d6 21       		.byte	0x21
 1475 04d7 E0040000 		.4byte	0x4e0
 1476 04db 04       		.byte	0x4
 1477 04dc 00       		.byte	0
 1478 04dd 00       		.byte	0
 1479 04de 00       		.byte	0
 1480 04df 00       		.byte	0
 1481 04e0 1A       		.uleb128 0x1a
 1482 04e1 C0040000 		.4byte	0x4c0
 1483 04e5 1B       		.uleb128 0x1b
 1484 04e6 77010000 		.4byte	.LASF56
 1485 04ea 01       		.byte	0x1
 1486 04eb 18       		.byte	0x18
 1487 04ec 6B000000 		.4byte	0x6b
 1488 04f0 05       		.uleb128 0x5
 1489 04f1 03       		.byte	0x3
 1490 04f2 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1491 04f6 17       		.uleb128 0x17
 1492 04f7 8C000000 		.4byte	0x8c
 1493 04fb 06050000 		.4byte	0x506
 1494 04ff 18       		.uleb128 0x18
 1495 0500 F1000000 		.4byte	0xf1
 1496 0504 00       		.byte	0
 1497 0505 00       		.byte	0
 1498 0506 1B       		.uleb128 0x1b
 1499 0507 00000000 		.4byte	.LASF57
 1500 050b 01       		.byte	0x1
 1501 050c 19       		.byte	0x19
 1502 050d 17050000 		.4byte	0x517
 1503 0511 05       		.uleb128 0x5
 1504 0512 03       		.byte	0x3
 1505 0513 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1506 0517 06       		.uleb128 0x6
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 43


 1507 0518 F6040000 		.4byte	0x4f6
 1508 051c 17       		.uleb128 0x17
 1509 051d 97000000 		.4byte	0x97
 1510 0521 2C050000 		.4byte	0x52c
 1511 0525 18       		.uleb128 0x18
 1512 0526 F1000000 		.4byte	0xf1
 1513 052a 00       		.byte	0
 1514 052b 00       		.byte	0
 1515 052c 1B       		.uleb128 0x1b
 1516 052d 3C040000 		.4byte	.LASF58
 1517 0531 01       		.byte	0x1
 1518 0532 1A       		.byte	0x1a
 1519 0533 3D050000 		.4byte	0x53d
 1520 0537 05       		.uleb128 0x5
 1521 0538 03       		.byte	0x3
 1522 0539 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1523 053d 06       		.uleb128 0x6
 1524 053e 1C050000 		.4byte	0x51c
 1525 0542 1C       		.uleb128 0x1c
 1526 0543 54030000 		.4byte	.LASF59
 1527 0547 03       		.byte	0x3
 1528 0548 49       		.byte	0x49
 1529 0549 58050000 		.4byte	0x558
 1530 054d 1D       		.uleb128 0x1d
 1531 054e 6B000000 		.4byte	0x6b
 1532 0552 1D       		.uleb128 0x1d
 1533 0553 6B000000 		.4byte	0x6b
 1534 0557 00       		.byte	0
 1535 0558 1E       		.uleb128 0x1e
 1536 0559 0C020000 		.4byte	.LASF65
 1537 055d 03       		.byte	0x3
 1538 055e 46       		.byte	0x46
 1539 055f DE000000 		.4byte	0xde
 1540 0563 72050000 		.4byte	0x572
 1541 0567 1D       		.uleb128 0x1d
 1542 0568 6B000000 		.4byte	0x6b
 1543 056c 1D       		.uleb128 0x1d
 1544 056d DE000000 		.4byte	0xde
 1545 0571 00       		.byte	0
 1546 0572 1C       		.uleb128 0x1c
 1547 0573 34010000 		.4byte	.LASF60
 1548 0577 03       		.byte	0x3
 1549 0578 58       		.byte	0x58
 1550 0579 83050000 		.4byte	0x583
 1551 057d 1D       		.uleb128 0x1d
 1552 057e 76000000 		.4byte	0x76
 1553 0582 00       		.byte	0
 1554 0583 1F       		.uleb128 0x1f
 1555 0584 9E030000 		.4byte	.LASF66
 1556 0588 03       		.byte	0x3
 1557 0589 60       		.byte	0x60
 1558 058a 1D       		.uleb128 0x1d
 1559 058b 6B000000 		.4byte	0x6b
 1560 058f 00       		.byte	0
 1561 0590 00       		.byte	0
 1562              		.section	.debug_abbrev,"",%progbits
 1563              	.Ldebug_abbrev0:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 44


 1564 0000 01       		.uleb128 0x1
 1565 0001 11       		.uleb128 0x11
 1566 0002 01       		.byte	0x1
 1567 0003 25       		.uleb128 0x25
 1568 0004 0E       		.uleb128 0xe
 1569 0005 13       		.uleb128 0x13
 1570 0006 0B       		.uleb128 0xb
 1571 0007 03       		.uleb128 0x3
 1572 0008 0E       		.uleb128 0xe
 1573 0009 1B       		.uleb128 0x1b
 1574 000a 0E       		.uleb128 0xe
 1575 000b 55       		.uleb128 0x55
 1576 000c 17       		.uleb128 0x17
 1577 000d 11       		.uleb128 0x11
 1578 000e 01       		.uleb128 0x1
 1579 000f 10       		.uleb128 0x10
 1580 0010 17       		.uleb128 0x17
 1581 0011 00       		.byte	0
 1582 0012 00       		.byte	0
 1583 0013 02       		.uleb128 0x2
 1584 0014 24       		.uleb128 0x24
 1585 0015 00       		.byte	0
 1586 0016 0B       		.uleb128 0xb
 1587 0017 0B       		.uleb128 0xb
 1588 0018 3E       		.uleb128 0x3e
 1589 0019 0B       		.uleb128 0xb
 1590 001a 03       		.uleb128 0x3
 1591 001b 0E       		.uleb128 0xe
 1592 001c 00       		.byte	0
 1593 001d 00       		.byte	0
 1594 001e 03       		.uleb128 0x3
 1595 001f 24       		.uleb128 0x24
 1596 0020 00       		.byte	0
 1597 0021 0B       		.uleb128 0xb
 1598 0022 0B       		.uleb128 0xb
 1599 0023 3E       		.uleb128 0x3e
 1600 0024 0B       		.uleb128 0xb
 1601 0025 03       		.uleb128 0x3
 1602 0026 08       		.uleb128 0x8
 1603 0027 00       		.byte	0
 1604 0028 00       		.byte	0
 1605 0029 04       		.uleb128 0x4
 1606 002a 16       		.uleb128 0x16
 1607 002b 00       		.byte	0
 1608 002c 03       		.uleb128 0x3
 1609 002d 0E       		.uleb128 0xe
 1610 002e 3A       		.uleb128 0x3a
 1611 002f 0B       		.uleb128 0xb
 1612 0030 3B       		.uleb128 0x3b
 1613 0031 0B       		.uleb128 0xb
 1614 0032 49       		.uleb128 0x49
 1615 0033 13       		.uleb128 0x13
 1616 0034 00       		.byte	0
 1617 0035 00       		.byte	0
 1618 0036 05       		.uleb128 0x5
 1619 0037 16       		.uleb128 0x16
 1620 0038 00       		.byte	0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 45


 1621 0039 03       		.uleb128 0x3
 1622 003a 0E       		.uleb128 0xe
 1623 003b 3A       		.uleb128 0x3a
 1624 003c 0B       		.uleb128 0xb
 1625 003d 3B       		.uleb128 0x3b
 1626 003e 05       		.uleb128 0x5
 1627 003f 49       		.uleb128 0x49
 1628 0040 13       		.uleb128 0x13
 1629 0041 00       		.byte	0
 1630 0042 00       		.byte	0
 1631 0043 06       		.uleb128 0x6
 1632 0044 35       		.uleb128 0x35
 1633 0045 00       		.byte	0
 1634 0046 49       		.uleb128 0x49
 1635 0047 13       		.uleb128 0x13
 1636 0048 00       		.byte	0
 1637 0049 00       		.byte	0
 1638 004a 07       		.uleb128 0x7
 1639 004b 0F       		.uleb128 0xf
 1640 004c 00       		.byte	0
 1641 004d 0B       		.uleb128 0xb
 1642 004e 0B       		.uleb128 0xb
 1643 004f 49       		.uleb128 0x49
 1644 0050 13       		.uleb128 0x13
 1645 0051 00       		.byte	0
 1646 0052 00       		.byte	0
 1647 0053 08       		.uleb128 0x8
 1648 0054 15       		.uleb128 0x15
 1649 0055 00       		.byte	0
 1650 0056 27       		.uleb128 0x27
 1651 0057 19       		.uleb128 0x19
 1652 0058 00       		.byte	0
 1653 0059 00       		.byte	0
 1654 005a 09       		.uleb128 0x9
 1655 005b 2E       		.uleb128 0x2e
 1656 005c 01       		.byte	0x1
 1657 005d 3F       		.uleb128 0x3f
 1658 005e 19       		.uleb128 0x19
 1659 005f 03       		.uleb128 0x3
 1660 0060 0E       		.uleb128 0xe
 1661 0061 3A       		.uleb128 0x3a
 1662 0062 0B       		.uleb128 0xb
 1663 0063 3B       		.uleb128 0x3b
 1664 0064 0B       		.uleb128 0xb
 1665 0065 27       		.uleb128 0x27
 1666 0066 19       		.uleb128 0x19
 1667 0067 11       		.uleb128 0x11
 1668 0068 01       		.uleb128 0x1
 1669 0069 12       		.uleb128 0x12
 1670 006a 06       		.uleb128 0x6
 1671 006b 40       		.uleb128 0x40
 1672 006c 18       		.uleb128 0x18
 1673 006d 9742     		.uleb128 0x2117
 1674 006f 19       		.uleb128 0x19
 1675 0070 01       		.uleb128 0x1
 1676 0071 13       		.uleb128 0x13
 1677 0072 00       		.byte	0
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 46


 1678 0073 00       		.byte	0
 1679 0074 0A       		.uleb128 0xa
 1680 0075 34       		.uleb128 0x34
 1681 0076 00       		.byte	0
 1682 0077 03       		.uleb128 0x3
 1683 0078 0E       		.uleb128 0xe
 1684 0079 3A       		.uleb128 0x3a
 1685 007a 0B       		.uleb128 0xb
 1686 007b 3B       		.uleb128 0x3b
 1687 007c 0B       		.uleb128 0xb
 1688 007d 49       		.uleb128 0x49
 1689 007e 13       		.uleb128 0x13
 1690 007f 02       		.uleb128 0x2
 1691 0080 17       		.uleb128 0x17
 1692 0081 00       		.byte	0
 1693 0082 00       		.byte	0
 1694 0083 0B       		.uleb128 0xb
 1695 0084 898201   		.uleb128 0x4109
 1696 0087 01       		.byte	0x1
 1697 0088 11       		.uleb128 0x11
 1698 0089 01       		.uleb128 0x1
 1699 008a 31       		.uleb128 0x31
 1700 008b 13       		.uleb128 0x13
 1701 008c 01       		.uleb128 0x1
 1702 008d 13       		.uleb128 0x13
 1703 008e 00       		.byte	0
 1704 008f 00       		.byte	0
 1705 0090 0C       		.uleb128 0xc
 1706 0091 8A8201   		.uleb128 0x410a
 1707 0094 00       		.byte	0
 1708 0095 02       		.uleb128 0x2
 1709 0096 18       		.uleb128 0x18
 1710 0097 9142     		.uleb128 0x2111
 1711 0099 18       		.uleb128 0x18
 1712 009a 00       		.byte	0
 1713 009b 00       		.byte	0
 1714 009c 0D       		.uleb128 0xd
 1715 009d 898201   		.uleb128 0x4109
 1716 00a0 01       		.byte	0x1
 1717 00a1 11       		.uleb128 0x11
 1718 00a2 01       		.uleb128 0x1
 1719 00a3 31       		.uleb128 0x31
 1720 00a4 13       		.uleb128 0x13
 1721 00a5 00       		.byte	0
 1722 00a6 00       		.byte	0
 1723 00a7 0E       		.uleb128 0xe
 1724 00a8 2E       		.uleb128 0x2e
 1725 00a9 01       		.byte	0x1
 1726 00aa 3F       		.uleb128 0x3f
 1727 00ab 19       		.uleb128 0x19
 1728 00ac 03       		.uleb128 0x3
 1729 00ad 0E       		.uleb128 0xe
 1730 00ae 3A       		.uleb128 0x3a
 1731 00af 0B       		.uleb128 0xb
 1732 00b0 3B       		.uleb128 0x3b
 1733 00b1 05       		.uleb128 0x5
 1734 00b2 27       		.uleb128 0x27
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 47


 1735 00b3 19       		.uleb128 0x19
 1736 00b4 11       		.uleb128 0x11
 1737 00b5 01       		.uleb128 0x1
 1738 00b6 12       		.uleb128 0x12
 1739 00b7 06       		.uleb128 0x6
 1740 00b8 40       		.uleb128 0x40
 1741 00b9 18       		.uleb128 0x18
 1742 00ba 9742     		.uleb128 0x2117
 1743 00bc 19       		.uleb128 0x19
 1744 00bd 01       		.uleb128 0x1
 1745 00be 13       		.uleb128 0x13
 1746 00bf 00       		.byte	0
 1747 00c0 00       		.byte	0
 1748 00c1 0F       		.uleb128 0xf
 1749 00c2 898201   		.uleb128 0x4109
 1750 00c5 00       		.byte	0
 1751 00c6 11       		.uleb128 0x11
 1752 00c7 01       		.uleb128 0x1
 1753 00c8 31       		.uleb128 0x31
 1754 00c9 13       		.uleb128 0x13
 1755 00ca 00       		.byte	0
 1756 00cb 00       		.byte	0
 1757 00cc 10       		.uleb128 0x10
 1758 00cd 2E       		.uleb128 0x2e
 1759 00ce 00       		.byte	0
 1760 00cf 3F       		.uleb128 0x3f
 1761 00d0 19       		.uleb128 0x19
 1762 00d1 03       		.uleb128 0x3
 1763 00d2 0E       		.uleb128 0xe
 1764 00d3 3A       		.uleb128 0x3a
 1765 00d4 0B       		.uleb128 0xb
 1766 00d5 3B       		.uleb128 0x3b
 1767 00d6 05       		.uleb128 0x5
 1768 00d7 27       		.uleb128 0x27
 1769 00d8 19       		.uleb128 0x19
 1770 00d9 11       		.uleb128 0x11
 1771 00da 01       		.uleb128 0x1
 1772 00db 12       		.uleb128 0x12
 1773 00dc 06       		.uleb128 0x6
 1774 00dd 40       		.uleb128 0x40
 1775 00de 18       		.uleb128 0x18
 1776 00df 9742     		.uleb128 0x2117
 1777 00e1 19       		.uleb128 0x19
 1778 00e2 00       		.byte	0
 1779 00e3 00       		.byte	0
 1780 00e4 11       		.uleb128 0x11
 1781 00e5 2E       		.uleb128 0x2e
 1782 00e6 01       		.byte	0x1
 1783 00e7 3F       		.uleb128 0x3f
 1784 00e8 19       		.uleb128 0x19
 1785 00e9 03       		.uleb128 0x3
 1786 00ea 0E       		.uleb128 0xe
 1787 00eb 3A       		.uleb128 0x3a
 1788 00ec 0B       		.uleb128 0xb
 1789 00ed 3B       		.uleb128 0x3b
 1790 00ee 05       		.uleb128 0x5
 1791 00ef 27       		.uleb128 0x27
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 48


 1792 00f0 19       		.uleb128 0x19
 1793 00f1 49       		.uleb128 0x49
 1794 00f2 13       		.uleb128 0x13
 1795 00f3 11       		.uleb128 0x11
 1796 00f4 01       		.uleb128 0x1
 1797 00f5 12       		.uleb128 0x12
 1798 00f6 06       		.uleb128 0x6
 1799 00f7 40       		.uleb128 0x40
 1800 00f8 18       		.uleb128 0x18
 1801 00f9 9742     		.uleb128 0x2117
 1802 00fb 19       		.uleb128 0x19
 1803 00fc 01       		.uleb128 0x1
 1804 00fd 13       		.uleb128 0x13
 1805 00fe 00       		.byte	0
 1806 00ff 00       		.byte	0
 1807 0100 12       		.uleb128 0x12
 1808 0101 05       		.uleb128 0x5
 1809 0102 00       		.byte	0
 1810 0103 03       		.uleb128 0x3
 1811 0104 0E       		.uleb128 0xe
 1812 0105 3A       		.uleb128 0x3a
 1813 0106 0B       		.uleb128 0xb
 1814 0107 3B       		.uleb128 0x3b
 1815 0108 05       		.uleb128 0x5
 1816 0109 49       		.uleb128 0x49
 1817 010a 13       		.uleb128 0x13
 1818 010b 02       		.uleb128 0x2
 1819 010c 17       		.uleb128 0x17
 1820 010d 00       		.byte	0
 1821 010e 00       		.byte	0
 1822 010f 13       		.uleb128 0x13
 1823 0110 34       		.uleb128 0x34
 1824 0111 00       		.byte	0
 1825 0112 03       		.uleb128 0x3
 1826 0113 0E       		.uleb128 0xe
 1827 0114 3A       		.uleb128 0x3a
 1828 0115 0B       		.uleb128 0xb
 1829 0116 3B       		.uleb128 0x3b
 1830 0117 05       		.uleb128 0x5
 1831 0118 49       		.uleb128 0x49
 1832 0119 13       		.uleb128 0x13
 1833 011a 02       		.uleb128 0x2
 1834 011b 17       		.uleb128 0x17
 1835 011c 00       		.byte	0
 1836 011d 00       		.byte	0
 1837 011e 14       		.uleb128 0x14
 1838 011f 2E       		.uleb128 0x2e
 1839 0120 01       		.byte	0x1
 1840 0121 3F       		.uleb128 0x3f
 1841 0122 19       		.uleb128 0x19
 1842 0123 03       		.uleb128 0x3
 1843 0124 0E       		.uleb128 0xe
 1844 0125 3A       		.uleb128 0x3a
 1845 0126 0B       		.uleb128 0xb
 1846 0127 3B       		.uleb128 0x3b
 1847 0128 05       		.uleb128 0x5
 1848 0129 27       		.uleb128 0x27
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 49


 1849 012a 19       		.uleb128 0x19
 1850 012b 49       		.uleb128 0x49
 1851 012c 13       		.uleb128 0x13
 1852 012d 11       		.uleb128 0x11
 1853 012e 01       		.uleb128 0x1
 1854 012f 12       		.uleb128 0x12
 1855 0130 06       		.uleb128 0x6
 1856 0131 40       		.uleb128 0x40
 1857 0132 18       		.uleb128 0x18
 1858 0133 9642     		.uleb128 0x2116
 1859 0135 19       		.uleb128 0x19
 1860 0136 01       		.uleb128 0x1
 1861 0137 13       		.uleb128 0x13
 1862 0138 00       		.byte	0
 1863 0139 00       		.byte	0
 1864 013a 15       		.uleb128 0x15
 1865 013b 34       		.uleb128 0x34
 1866 013c 00       		.byte	0
 1867 013d 03       		.uleb128 0x3
 1868 013e 0E       		.uleb128 0xe
 1869 013f 3A       		.uleb128 0x3a
 1870 0140 0B       		.uleb128 0xb
 1871 0141 3B       		.uleb128 0x3b
 1872 0142 05       		.uleb128 0x5
 1873 0143 49       		.uleb128 0x49
 1874 0144 13       		.uleb128 0x13
 1875 0145 02       		.uleb128 0x2
 1876 0146 18       		.uleb128 0x18
 1877 0147 00       		.byte	0
 1878 0148 00       		.byte	0
 1879 0149 16       		.uleb128 0x16
 1880 014a 34       		.uleb128 0x34
 1881 014b 00       		.byte	0
 1882 014c 03       		.uleb128 0x3
 1883 014d 0E       		.uleb128 0xe
 1884 014e 3A       		.uleb128 0x3a
 1885 014f 0B       		.uleb128 0xb
 1886 0150 3B       		.uleb128 0x3b
 1887 0151 05       		.uleb128 0x5
 1888 0152 49       		.uleb128 0x49
 1889 0153 13       		.uleb128 0x13
 1890 0154 00       		.byte	0
 1891 0155 00       		.byte	0
 1892 0156 17       		.uleb128 0x17
 1893 0157 01       		.uleb128 0x1
 1894 0158 01       		.byte	0x1
 1895 0159 49       		.uleb128 0x49
 1896 015a 13       		.uleb128 0x13
 1897 015b 01       		.uleb128 0x1
 1898 015c 13       		.uleb128 0x13
 1899 015d 00       		.byte	0
 1900 015e 00       		.byte	0
 1901 015f 18       		.uleb128 0x18
 1902 0160 21       		.uleb128 0x21
 1903 0161 00       		.byte	0
 1904 0162 49       		.uleb128 0x49
 1905 0163 13       		.uleb128 0x13
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 50


 1906 0164 2F       		.uleb128 0x2f
 1907 0165 0B       		.uleb128 0xb
 1908 0166 00       		.byte	0
 1909 0167 00       		.byte	0
 1910 0168 19       		.uleb128 0x19
 1911 0169 34       		.uleb128 0x34
 1912 016a 00       		.byte	0
 1913 016b 03       		.uleb128 0x3
 1914 016c 0E       		.uleb128 0xe
 1915 016d 3A       		.uleb128 0x3a
 1916 016e 0B       		.uleb128 0xb
 1917 016f 3B       		.uleb128 0x3b
 1918 0170 0B       		.uleb128 0xb
 1919 0171 49       		.uleb128 0x49
 1920 0172 13       		.uleb128 0x13
 1921 0173 1C       		.uleb128 0x1c
 1922 0174 0A       		.uleb128 0xa
 1923 0175 00       		.byte	0
 1924 0176 00       		.byte	0
 1925 0177 1A       		.uleb128 0x1a
 1926 0178 26       		.uleb128 0x26
 1927 0179 00       		.byte	0
 1928 017a 49       		.uleb128 0x49
 1929 017b 13       		.uleb128 0x13
 1930 017c 00       		.byte	0
 1931 017d 00       		.byte	0
 1932 017e 1B       		.uleb128 0x1b
 1933 017f 34       		.uleb128 0x34
 1934 0180 00       		.byte	0
 1935 0181 03       		.uleb128 0x3
 1936 0182 0E       		.uleb128 0xe
 1937 0183 3A       		.uleb128 0x3a
 1938 0184 0B       		.uleb128 0xb
 1939 0185 3B       		.uleb128 0x3b
 1940 0186 0B       		.uleb128 0xb
 1941 0187 49       		.uleb128 0x49
 1942 0188 13       		.uleb128 0x13
 1943 0189 3F       		.uleb128 0x3f
 1944 018a 19       		.uleb128 0x19
 1945 018b 02       		.uleb128 0x2
 1946 018c 18       		.uleb128 0x18
 1947 018d 00       		.byte	0
 1948 018e 00       		.byte	0
 1949 018f 1C       		.uleb128 0x1c
 1950 0190 2E       		.uleb128 0x2e
 1951 0191 01       		.byte	0x1
 1952 0192 3F       		.uleb128 0x3f
 1953 0193 19       		.uleb128 0x19
 1954 0194 03       		.uleb128 0x3
 1955 0195 0E       		.uleb128 0xe
 1956 0196 3A       		.uleb128 0x3a
 1957 0197 0B       		.uleb128 0xb
 1958 0198 3B       		.uleb128 0x3b
 1959 0199 0B       		.uleb128 0xb
 1960 019a 27       		.uleb128 0x27
 1961 019b 19       		.uleb128 0x19
 1962 019c 3C       		.uleb128 0x3c
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 51


 1963 019d 19       		.uleb128 0x19
 1964 019e 01       		.uleb128 0x1
 1965 019f 13       		.uleb128 0x13
 1966 01a0 00       		.byte	0
 1967 01a1 00       		.byte	0
 1968 01a2 1D       		.uleb128 0x1d
 1969 01a3 05       		.uleb128 0x5
 1970 01a4 00       		.byte	0
 1971 01a5 49       		.uleb128 0x49
 1972 01a6 13       		.uleb128 0x13
 1973 01a7 00       		.byte	0
 1974 01a8 00       		.byte	0
 1975 01a9 1E       		.uleb128 0x1e
 1976 01aa 2E       		.uleb128 0x2e
 1977 01ab 01       		.byte	0x1
 1978 01ac 3F       		.uleb128 0x3f
 1979 01ad 19       		.uleb128 0x19
 1980 01ae 03       		.uleb128 0x3
 1981 01af 0E       		.uleb128 0xe
 1982 01b0 3A       		.uleb128 0x3a
 1983 01b1 0B       		.uleb128 0xb
 1984 01b2 3B       		.uleb128 0x3b
 1985 01b3 0B       		.uleb128 0xb
 1986 01b4 27       		.uleb128 0x27
 1987 01b5 19       		.uleb128 0x19
 1988 01b6 49       		.uleb128 0x49
 1989 01b7 13       		.uleb128 0x13
 1990 01b8 3C       		.uleb128 0x3c
 1991 01b9 19       		.uleb128 0x19
 1992 01ba 01       		.uleb128 0x1
 1993 01bb 13       		.uleb128 0x13
 1994 01bc 00       		.byte	0
 1995 01bd 00       		.byte	0
 1996 01be 1F       		.uleb128 0x1f
 1997 01bf 2E       		.uleb128 0x2e
 1998 01c0 01       		.byte	0x1
 1999 01c1 3F       		.uleb128 0x3f
 2000 01c2 19       		.uleb128 0x19
 2001 01c3 03       		.uleb128 0x3
 2002 01c4 0E       		.uleb128 0xe
 2003 01c5 3A       		.uleb128 0x3a
 2004 01c6 0B       		.uleb128 0xb
 2005 01c7 3B       		.uleb128 0x3b
 2006 01c8 0B       		.uleb128 0xb
 2007 01c9 27       		.uleb128 0x27
 2008 01ca 19       		.uleb128 0x19
 2009 01cb 3C       		.uleb128 0x3c
 2010 01cc 19       		.uleb128 0x19
 2011 01cd 00       		.byte	0
 2012 01ce 00       		.byte	0
 2013 01cf 00       		.byte	0
 2014              		.section	.debug_loc,"",%progbits
 2015              	.Ldebug_loc0:
 2016              	.LLST0:
 2017 0000 74000000 		.4byte	.LVL5
 2018 0004 78000000 		.4byte	.LVL7
 2019 0008 0200     		.2byte	0x2
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 52


 2020 000a 30       		.byte	0x30
 2021 000b 9F       		.byte	0x9f
 2022 000c 78000000 		.4byte	.LVL7
 2023 0010 FC000000 		.4byte	.LFE2
 2024 0014 0100     		.2byte	0x1
 2025 0016 53       		.byte	0x53
 2026 0017 00000000 		.4byte	0
 2027 001b 00000000 		.4byte	0
 2028              	.LLST1:
 2029 001f 68000000 		.4byte	.LVL2
 2030 0023 6E000000 		.4byte	.LVL3
 2031 0027 0700     		.2byte	0x7
 2032 0029 71       		.byte	0x71
 2033 002a 00       		.sleb128 0
 2034 002b 40       		.byte	0x40
 2035 002c 49       		.byte	0x49
 2036 002d 24       		.byte	0x24
 2037 002e 21       		.byte	0x21
 2038 002f 9F       		.byte	0x9f
 2039 0030 72000000 		.4byte	.LVL4
 2040 0034 76000000 		.4byte	.LVL6
 2041 0038 0100     		.2byte	0x1
 2042 003a 53       		.byte	0x53
 2043 003b 76000000 		.4byte	.LVL6
 2044 003f 78000000 		.4byte	.LVL7
 2045 0043 0200     		.2byte	0x2
 2046 0045 72       		.byte	0x72
 2047 0046 00       		.sleb128 0
 2048 0047 78000000 		.4byte	.LVL7
 2049 004b 94000000 		.4byte	.LVL9
 2050 004f 0200     		.2byte	0x2
 2051 0051 30       		.byte	0x30
 2052 0052 9F       		.byte	0x9f
 2053 0053 00000000 		.4byte	0
 2054 0057 00000000 		.4byte	0
 2055              	.LLST2:
 2056 005b 84000000 		.4byte	.LVL8
 2057 005f 94000000 		.4byte	.LVL9
 2058 0063 0400     		.2byte	0x4
 2059 0065 0A       		.byte	0xa
 2060 0066 0010     		.2byte	0x1000
 2061 0068 9F       		.byte	0x9f
 2062 0069 00000000 		.4byte	0
 2063 006d 00000000 		.4byte	0
 2064              	.LLST3:
 2065 0071 00000000 		.4byte	.LVL13
 2066 0075 06000000 		.4byte	.LVL15
 2067 0079 0100     		.2byte	0x1
 2068 007b 50       		.byte	0x50
 2069 007c 06000000 		.4byte	.LVL15
 2070 0080 1A000000 		.4byte	.LVL17
 2071 0084 0100     		.2byte	0x1
 2072 0086 52       		.byte	0x52
 2073 0087 1A000000 		.4byte	.LVL17
 2074 008b 20000000 		.4byte	.LVL18
 2075 008f 0400     		.2byte	0x4
 2076 0091 F3       		.byte	0xf3
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 53


 2077 0092 01       		.uleb128 0x1
 2078 0093 50       		.byte	0x50
 2079 0094 9F       		.byte	0x9f
 2080 0095 20000000 		.4byte	.LVL18
 2081 0099 22000000 		.4byte	.LVL19
 2082 009d 0100     		.2byte	0x1
 2083 009f 50       		.byte	0x50
 2084 00a0 22000000 		.4byte	.LVL19
 2085 00a4 28000000 		.4byte	.LFE7
 2086 00a8 0400     		.2byte	0x4
 2087 00aa F3       		.byte	0xf3
 2088 00ab 01       		.uleb128 0x1
 2089 00ac 50       		.byte	0x50
 2090 00ad 9F       		.byte	0x9f
 2091 00ae 00000000 		.4byte	0
 2092 00b2 00000000 		.4byte	0
 2093              	.LLST4:
 2094 00b6 02000000 		.4byte	.LVL14
 2095 00ba 06000000 		.4byte	.LVL15
 2096 00be 0200     		.2byte	0x2
 2097 00c0 30       		.byte	0x30
 2098 00c1 9F       		.byte	0x9f
 2099 00c2 0E000000 		.4byte	.LVL16
 2100 00c6 20000000 		.4byte	.LVL18
 2101 00ca 0100     		.2byte	0x1
 2102 00cc 50       		.byte	0x50
 2103 00cd 20000000 		.4byte	.LVL18
 2104 00d1 22000000 		.4byte	.LVL19
 2105 00d5 0200     		.2byte	0x2
 2106 00d7 30       		.byte	0x30
 2107 00d8 9F       		.byte	0x9f
 2108 00d9 22000000 		.4byte	.LVL19
 2109 00dd 28000000 		.4byte	.LFE7
 2110 00e1 0100     		.2byte	0x1
 2111 00e3 50       		.byte	0x50
 2112 00e4 00000000 		.4byte	0
 2113 00e8 00000000 		.4byte	0
 2114              	.LLST5:
 2115 00ec 00000000 		.4byte	.LVL20
 2116 00f0 08000000 		.4byte	.LVL21
 2117 00f4 0100     		.2byte	0x1
 2118 00f6 50       		.byte	0x50
 2119 00f7 08000000 		.4byte	.LVL21
 2120 00fb 12000000 		.4byte	.LVL23
 2121 00ff 0100     		.2byte	0x1
 2122 0101 54       		.byte	0x54
 2123 0102 12000000 		.4byte	.LVL23
 2124 0106 20000000 		.4byte	.LVL25
 2125 010a 0400     		.2byte	0x4
 2126 010c F3       		.byte	0xf3
 2127 010d 01       		.uleb128 0x1
 2128 010e 50       		.byte	0x50
 2129 010f 9F       		.byte	0x9f
 2130 0110 20000000 		.4byte	.LVL25
 2131 0114 22000000 		.4byte	.LVL26
 2132 0118 0100     		.2byte	0x1
 2133 011a 54       		.byte	0x54
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 54


 2134 011b 22000000 		.4byte	.LVL26
 2135 011f 2C000000 		.4byte	.LFE8
 2136 0123 0400     		.2byte	0x4
 2137 0125 F3       		.byte	0xf3
 2138 0126 01       		.uleb128 0x1
 2139 0127 50       		.byte	0x50
 2140 0128 9F       		.byte	0x9f
 2141 0129 00000000 		.4byte	0
 2142 012d 00000000 		.4byte	0
 2143              	.LLST6:
 2144 0131 1E000000 		.4byte	.LVL24
 2145 0135 20000000 		.4byte	.LVL25
 2146 0139 0100     		.2byte	0x1
 2147 013b 50       		.byte	0x50
 2148 013c 22000000 		.4byte	.LVL26
 2149 0140 24000000 		.4byte	.LVL27
 2150 0144 0100     		.2byte	0x1
 2151 0146 50       		.byte	0x50
 2152 0147 00000000 		.4byte	0
 2153 014b 00000000 		.4byte	0
 2154              	.LLST7:
 2155 014f 00000000 		.4byte	.LVL28
 2156 0153 04000000 		.4byte	.LVL29
 2157 0157 0100     		.2byte	0x1
 2158 0159 50       		.byte	0x50
 2159 015a 04000000 		.4byte	.LVL29
 2160 015e 10000000 		.4byte	.LFE9
 2161 0162 0400     		.2byte	0x4
 2162 0164 F3       		.byte	0xf3
 2163 0165 01       		.uleb128 0x1
 2164 0166 50       		.byte	0x50
 2165 0167 9F       		.byte	0x9f
 2166 0168 00000000 		.4byte	0
 2167 016c 00000000 		.4byte	0
 2168              	.LLST8:
 2169 0170 00000000 		.4byte	.LVL30
 2170 0174 0E000000 		.4byte	.LVL31
 2171 0178 0100     		.2byte	0x1
 2172 017a 50       		.byte	0x50
 2173 017b 0E000000 		.4byte	.LVL31
 2174 017f 1C000000 		.4byte	.LFE10
 2175 0183 0400     		.2byte	0x4
 2176 0185 F3       		.byte	0xf3
 2177 0186 01       		.uleb128 0x1
 2178 0187 50       		.byte	0x50
 2179 0188 9F       		.byte	0x9f
 2180 0189 00000000 		.4byte	0
 2181 018d 00000000 		.4byte	0
 2182              	.LLST9:
 2183 0191 00000000 		.4byte	.LVL32
 2184 0195 0E000000 		.4byte	.LVL33
 2185 0199 0100     		.2byte	0x1
 2186 019b 50       		.byte	0x50
 2187 019c 0E000000 		.4byte	.LVL33
 2188 01a0 18000000 		.4byte	.LFE11
 2189 01a4 0400     		.2byte	0x4
 2190 01a6 F3       		.byte	0xf3
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 55


 2191 01a7 01       		.uleb128 0x1
 2192 01a8 50       		.byte	0x50
 2193 01a9 9F       		.byte	0x9f
 2194 01aa 00000000 		.4byte	0
 2195 01ae 00000000 		.4byte	0
 2196              	.LLST10:
 2197 01b2 00000000 		.4byte	.LVL34
 2198 01b6 04000000 		.4byte	.LVL35
 2199 01ba 0100     		.2byte	0x1
 2200 01bc 50       		.byte	0x50
 2201 01bd 04000000 		.4byte	.LVL35
 2202 01c1 10000000 		.4byte	.LFE12
 2203 01c5 0400     		.2byte	0x4
 2204 01c7 F3       		.byte	0xf3
 2205 01c8 01       		.uleb128 0x1
 2206 01c9 50       		.byte	0x50
 2207 01ca 9F       		.byte	0x9f
 2208 01cb 00000000 		.4byte	0
 2209 01cf 00000000 		.4byte	0
 2210              	.LLST11:
 2211 01d3 00000000 		.4byte	.LVL36
 2212 01d7 04000000 		.4byte	.LVL37
 2213 01db 0100     		.2byte	0x1
 2214 01dd 50       		.byte	0x50
 2215 01de 04000000 		.4byte	.LVL37
 2216 01e2 10000000 		.4byte	.LFE13
 2217 01e6 0400     		.2byte	0x4
 2218 01e8 F3       		.byte	0xf3
 2219 01e9 01       		.uleb128 0x1
 2220 01ea 50       		.byte	0x50
 2221 01eb 9F       		.byte	0x9f
 2222 01ec 00000000 		.4byte	0
 2223 01f0 00000000 		.4byte	0
 2224              	.LLST12:
 2225 01f4 00000000 		.4byte	.LVL38
 2226 01f8 0C000000 		.4byte	.LVL39
 2227 01fc 0100     		.2byte	0x1
 2228 01fe 50       		.byte	0x50
 2229 01ff 0C000000 		.4byte	.LVL39
 2230 0203 12000000 		.4byte	.LVL41
 2231 0207 0100     		.2byte	0x1
 2232 0209 54       		.byte	0x54
 2233 020a 12000000 		.4byte	.LVL41
 2234 020e 1C000000 		.4byte	.LFE14
 2235 0212 0400     		.2byte	0x4
 2236 0214 F3       		.byte	0xf3
 2237 0215 01       		.uleb128 0x1
 2238 0216 50       		.byte	0x50
 2239 0217 9F       		.byte	0x9f
 2240 0218 00000000 		.4byte	0
 2241 021c 00000000 		.4byte	0
 2242              	.LLST13:
 2243 0220 00000000 		.4byte	.LVL38
 2244 0224 0F000000 		.4byte	.LVL40-1
 2245 0228 0100     		.2byte	0x1
 2246 022a 51       		.byte	0x51
 2247 022b 0F000000 		.4byte	.LVL40-1
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 56


 2248 022f 1C000000 		.4byte	.LFE14
 2249 0233 0400     		.2byte	0x4
 2250 0235 F3       		.byte	0xf3
 2251 0236 01       		.uleb128 0x1
 2252 0237 51       		.byte	0x51
 2253 0238 9F       		.byte	0x9f
 2254 0239 00000000 		.4byte	0
 2255 023d 00000000 		.4byte	0
 2256              	.LLST14:
 2257 0241 00000000 		.4byte	.LVL42
 2258 0245 0C000000 		.4byte	.LVL43
 2259 0249 0100     		.2byte	0x1
 2260 024b 50       		.byte	0x50
 2261 024c 0C000000 		.4byte	.LVL43
 2262 0250 12000000 		.4byte	.LVL45
 2263 0254 0100     		.2byte	0x1
 2264 0256 54       		.byte	0x54
 2265 0257 12000000 		.4byte	.LVL45
 2266 025b 1C000000 		.4byte	.LFE15
 2267 025f 0400     		.2byte	0x4
 2268 0261 F3       		.byte	0xf3
 2269 0262 01       		.uleb128 0x1
 2270 0263 50       		.byte	0x50
 2271 0264 9F       		.byte	0x9f
 2272 0265 00000000 		.4byte	0
 2273 0269 00000000 		.4byte	0
 2274              	.LLST15:
 2275 026d 00000000 		.4byte	.LVL42
 2276 0271 0F000000 		.4byte	.LVL44-1
 2277 0275 0100     		.2byte	0x1
 2278 0277 51       		.byte	0x51
 2279 0278 0F000000 		.4byte	.LVL44-1
 2280 027c 16000000 		.4byte	.LVL46
 2281 0280 0100     		.2byte	0x1
 2282 0282 55       		.byte	0x55
 2283 0283 16000000 		.4byte	.LVL46
 2284 0287 1C000000 		.4byte	.LFE15
 2285 028b 0800     		.2byte	0x8
 2286 028d F3       		.byte	0xf3
 2287 028e 01       		.uleb128 0x1
 2288 028f 50       		.byte	0x50
 2289 0290 32       		.byte	0x32
 2290 0291 24       		.byte	0x24
 2291 0292 73       		.byte	0x73
 2292 0293 00       		.sleb128 0
 2293 0294 22       		.byte	0x22
 2294 0295 00000000 		.4byte	0
 2295 0299 00000000 		.4byte	0
 2296              	.LLST16:
 2297 029d 00000000 		.4byte	.LVL47
 2298 02a1 0C000000 		.4byte	.LVL48
 2299 02a5 0100     		.2byte	0x1
 2300 02a7 50       		.byte	0x50
 2301 02a8 0C000000 		.4byte	.LVL48
 2302 02ac 44000000 		.4byte	.LVL54
 2303 02b0 0100     		.2byte	0x1
 2304 02b2 54       		.byte	0x54
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 57


 2305 02b3 44000000 		.4byte	.LVL54
 2306 02b7 5C000000 		.4byte	.LFE16
 2307 02bb 0400     		.2byte	0x4
 2308 02bd F3       		.byte	0xf3
 2309 02be 01       		.uleb128 0x1
 2310 02bf 50       		.byte	0x50
 2311 02c0 9F       		.byte	0x9f
 2312 02c1 00000000 		.4byte	0
 2313 02c5 00000000 		.4byte	0
 2314              	.LLST17:
 2315 02c9 00000000 		.4byte	.LVL47
 2316 02cd 0F000000 		.4byte	.LVL49-1
 2317 02d1 0100     		.2byte	0x1
 2318 02d3 51       		.byte	0x51
 2319 02d4 0F000000 		.4byte	.LVL49-1
 2320 02d8 1A000000 		.4byte	.LVL50
 2321 02dc 0400     		.2byte	0x4
 2322 02de F3       		.byte	0xf3
 2323 02df 01       		.uleb128 0x1
 2324 02e0 51       		.byte	0x51
 2325 02e1 9F       		.byte	0x9f
 2326 02e2 1A000000 		.4byte	.LVL50
 2327 02e6 28000000 		.4byte	.LVL51
 2328 02ea 0100     		.2byte	0x1
 2329 02ec 51       		.byte	0x51
 2330 02ed 32000000 		.4byte	.LVL52
 2331 02f1 36000000 		.4byte	.LVL53
 2332 02f5 0100     		.2byte	0x1
 2333 02f7 51       		.byte	0x51
 2334 02f8 00000000 		.4byte	0
 2335 02fc 00000000 		.4byte	0
 2336              	.LLST18:
 2337 0300 00000000 		.4byte	.LVL56
 2338 0304 0C000000 		.4byte	.LVL57
 2339 0308 0100     		.2byte	0x1
 2340 030a 50       		.byte	0x50
 2341 030b 0C000000 		.4byte	.LVL57
 2342 030f 26000000 		.4byte	.LVL61
 2343 0313 0100     		.2byte	0x1
 2344 0315 55       		.byte	0x55
 2345 0316 26000000 		.4byte	.LVL61
 2346 031a 40000000 		.4byte	.LFE17
 2347 031e 0400     		.2byte	0x4
 2348 0320 F3       		.byte	0xf3
 2349 0321 01       		.uleb128 0x1
 2350 0322 50       		.byte	0x50
 2351 0323 9F       		.byte	0x9f
 2352 0324 00000000 		.4byte	0
 2353 0328 00000000 		.4byte	0
 2354              	.LLST19:
 2355 032c 00000000 		.4byte	.LVL56
 2356 0330 0F000000 		.4byte	.LVL58-1
 2357 0334 0100     		.2byte	0x1
 2358 0336 51       		.byte	0x51
 2359 0337 0F000000 		.4byte	.LVL58-1
 2360 033b 1A000000 		.4byte	.LVL59
 2361 033f 0400     		.2byte	0x4
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 58


 2362 0341 F3       		.byte	0xf3
 2363 0342 01       		.uleb128 0x1
 2364 0343 51       		.byte	0x51
 2365 0344 9F       		.byte	0x9f
 2366 0345 1A000000 		.4byte	.LVL59
 2367 0349 23000000 		.4byte	.LVL60-1
 2368 034d 0100     		.2byte	0x1
 2369 034f 50       		.byte	0x50
 2370 0350 00000000 		.4byte	0
 2371 0354 00000000 		.4byte	0
 2372              	.LLST20:
 2373 0358 00000000 		.4byte	.LVL63
 2374 035c 0C000000 		.4byte	.LVL64
 2375 0360 0100     		.2byte	0x1
 2376 0362 50       		.byte	0x50
 2377 0363 0C000000 		.4byte	.LVL64
 2378 0367 28000000 		.4byte	.LVL69
 2379 036b 0100     		.2byte	0x1
 2380 036d 54       		.byte	0x54
 2381 036e 28000000 		.4byte	.LVL69
 2382 0372 48000000 		.4byte	.LFE18
 2383 0376 0400     		.2byte	0x4
 2384 0378 F3       		.byte	0xf3
 2385 0379 01       		.uleb128 0x1
 2386 037a 50       		.byte	0x50
 2387 037b 9F       		.byte	0x9f
 2388 037c 00000000 		.4byte	0
 2389 0380 00000000 		.4byte	0
 2390              	.LLST21:
 2391 0384 00000000 		.4byte	.LVL63
 2392 0388 0F000000 		.4byte	.LVL65-1
 2393 038c 0100     		.2byte	0x1
 2394 038e 51       		.byte	0x51
 2395 038f 0F000000 		.4byte	.LVL65-1
 2396 0393 1A000000 		.4byte	.LVL66
 2397 0397 0400     		.2byte	0x4
 2398 0399 F3       		.byte	0xf3
 2399 039a 01       		.uleb128 0x1
 2400 039b 51       		.byte	0x51
 2401 039c 9F       		.byte	0x9f
 2402 039d 1A000000 		.4byte	.LVL66
 2403 03a1 1D000000 		.4byte	.LVL67-1
 2404 03a5 0100     		.2byte	0x1
 2405 03a7 50       		.byte	0x50
 2406 03a8 00000000 		.4byte	0
 2407 03ac 00000000 		.4byte	0
 2408              		.section	.debug_aranges,"",%progbits
 2409 0000 A4000000 		.4byte	0xa4
 2410 0004 0200     		.2byte	0x2
 2411 0006 00000000 		.4byte	.Ldebug_info0
 2412 000a 04       		.byte	0x4
 2413 000b 00       		.byte	0
 2414 000c 0000     		.2byte	0
 2415 000e 0000     		.2byte	0
 2416 0010 00000000 		.4byte	.LFB2
 2417 0014 FC000000 		.4byte	.LFE2-.LFB2
 2418 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 59


 2419 001c 30000000 		.4byte	.LFE3-.LFB3
 2420 0020 00000000 		.4byte	.LFB1
 2421 0024 20000000 		.4byte	.LFE1-.LFB1
 2422 0028 00000000 		.4byte	.LFB4
 2423 002c 10000000 		.4byte	.LFE4-.LFB4
 2424 0030 00000000 		.4byte	.LFB5
 2425 0034 14000000 		.4byte	.LFE5-.LFB5
 2426 0038 00000000 		.4byte	.LFB6
 2427 003c 14000000 		.4byte	.LFE6-.LFB6
 2428 0040 00000000 		.4byte	.LFB7
 2429 0044 28000000 		.4byte	.LFE7-.LFB7
 2430 0048 00000000 		.4byte	.LFB8
 2431 004c 2C000000 		.4byte	.LFE8-.LFB8
 2432 0050 00000000 		.4byte	.LFB9
 2433 0054 10000000 		.4byte	.LFE9-.LFB9
 2434 0058 00000000 		.4byte	.LFB10
 2435 005c 1C000000 		.4byte	.LFE10-.LFB10
 2436 0060 00000000 		.4byte	.LFB11
 2437 0064 18000000 		.4byte	.LFE11-.LFB11
 2438 0068 00000000 		.4byte	.LFB12
 2439 006c 10000000 		.4byte	.LFE12-.LFB12
 2440 0070 00000000 		.4byte	.LFB13
 2441 0074 10000000 		.4byte	.LFE13-.LFB13
 2442 0078 00000000 		.4byte	.LFB14
 2443 007c 1C000000 		.4byte	.LFE14-.LFB14
 2444 0080 00000000 		.4byte	.LFB15
 2445 0084 1C000000 		.4byte	.LFE15-.LFB15
 2446 0088 00000000 		.4byte	.LFB16
 2447 008c 5C000000 		.4byte	.LFE16-.LFB16
 2448 0090 00000000 		.4byte	.LFB17
 2449 0094 40000000 		.4byte	.LFE17-.LFB17
 2450 0098 00000000 		.4byte	.LFB18
 2451 009c 48000000 		.4byte	.LFE18-.LFB18
 2452 00a0 00000000 		.4byte	0
 2453 00a4 00000000 		.4byte	0
 2454              		.section	.debug_ranges,"",%progbits
 2455              	.Ldebug_ranges0:
 2456 0000 00000000 		.4byte	.LFB2
 2457 0004 FC000000 		.4byte	.LFE2
 2458 0008 00000000 		.4byte	.LFB3
 2459 000c 30000000 		.4byte	.LFE3
 2460 0010 00000000 		.4byte	.LFB1
 2461 0014 20000000 		.4byte	.LFE1
 2462 0018 00000000 		.4byte	.LFB4
 2463 001c 10000000 		.4byte	.LFE4
 2464 0020 00000000 		.4byte	.LFB5
 2465 0024 14000000 		.4byte	.LFE5
 2466 0028 00000000 		.4byte	.LFB6
 2467 002c 14000000 		.4byte	.LFE6
 2468 0030 00000000 		.4byte	.LFB7
 2469 0034 28000000 		.4byte	.LFE7
 2470 0038 00000000 		.4byte	.LFB8
 2471 003c 2C000000 		.4byte	.LFE8
 2472 0040 00000000 		.4byte	.LFB9
 2473 0044 10000000 		.4byte	.LFE9
 2474 0048 00000000 		.4byte	.LFB10
 2475 004c 1C000000 		.4byte	.LFE10
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 60


 2476 0050 00000000 		.4byte	.LFB11
 2477 0054 18000000 		.4byte	.LFE11
 2478 0058 00000000 		.4byte	.LFB12
 2479 005c 10000000 		.4byte	.LFE12
 2480 0060 00000000 		.4byte	.LFB13
 2481 0064 10000000 		.4byte	.LFE13
 2482 0068 00000000 		.4byte	.LFB14
 2483 006c 1C000000 		.4byte	.LFE14
 2484 0070 00000000 		.4byte	.LFB15
 2485 0074 1C000000 		.4byte	.LFE15
 2486 0078 00000000 		.4byte	.LFB16
 2487 007c 5C000000 		.4byte	.LFE16
 2488 0080 00000000 		.4byte	.LFB17
 2489 0084 40000000 		.4byte	.LFE17
 2490 0088 00000000 		.4byte	.LFB18
 2491 008c 48000000 		.4byte	.LFE18
 2492 0090 00000000 		.4byte	0
 2493 0094 00000000 		.4byte	0
 2494              		.section	.debug_line,"",%progbits
 2495              	.Ldebug_line0:
 2496 0000 78020000 		.section	.debug_str,"MS",%progbits,1
 2496      02005700 
 2496      00000201 
 2496      FB0E0D00 
 2496      01010101 
 2497              	.LASF57:
 2498 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2498      5341525F 
 2498      5365715F 
 2498      315F6F66 
 2498      66736574 
 2499              	.LASF10:
 2500 0015 75696E74 		.ascii	"uint16\000"
 2500      313600
 2501              	.LASF25:
 2502 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2502      5341525F 
 2502      5365715F 
 2502      315F496E 
 2502      697400
 2503              	.LASF48:
 2504 002f 61646347 		.ascii	"adcGain\000"
 2504      61696E00 
 2505              	.LASF24:
 2506 0037 636F756E 		.ascii	"counts\000"
 2506      747300
 2507              	.LASF29:
 2508 003e 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2508      5341525F 
 2508      5365715F 
 2508      315F5374 
 2508      61727443 
 2509              	.LASF44:
 2510 0059 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2510      5341525F 
 2510      5365715F 
 2510      315F5365 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 61


 2510      74536174 
 2511              	.LASF27:
 2512 0072 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2512      5341525F 
 2512      5365715F 
 2512      315F5374 
 2512      61727400 
 2513              	.LASF7:
 2514 0086 6C6F6E67 		.ascii	"long long unsigned int\000"
 2514      206C6F6E 
 2514      6720756E 
 2514      7369676E 
 2514      65642069 
 2515              	.LASF26:
 2516 009d 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2516      5341525F 
 2516      5365715F 
 2516      315F456E 
 2516      61626C65 
 2517              	.LASF33:
 2518 00b2 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2518      5341525F 
 2518      5365715F 
 2518      315F4765 
 2518      74526573 
 2519              	.LASF6:
 2520 00cc 6C6F6E67 		.ascii	"long long int\000"
 2520      206C6F6E 
 2520      6720696E 
 2520      7400
 2521              	.LASF0:
 2522 00da 7369676E 		.ascii	"signed char\000"
 2522      65642063 
 2522      68617200 
 2523              	.LASF41:
 2524 00e6 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2524      5341525F 
 2524      5365715F 
 2524      315F5365 
 2524      74486967 
 2525              	.LASF13:
 2526 0101 696E7433 		.ascii	"int32\000"
 2526      3200
 2527              	.LASF52:
 2528 0107 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2528      5341525F 
 2528      5365715F 
 2528      315F436F 
 2528      756E7473 
 2529              	.LASF4:
 2530 0125 6C6F6E67 		.ascii	"long int\000"
 2530      20696E74 
 2530      00
 2531              	.LASF9:
 2532 012e 75696E74 		.ascii	"uint8\000"
 2532      3800
 2533              	.LASF60:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 62


 2534 0134 43794465 		.ascii	"CyDelayUs\000"
 2534      6C617955 
 2534      7300
 2535              	.LASF16:
 2536 013e 646F7562 		.ascii	"double\000"
 2536      6C6500
 2537              	.LASF11:
 2538 0145 75696E74 		.ascii	"uint32\000"
 2538      333200
 2539              	.LASF38:
 2540 014c 6D61736B 		.ascii	"mask\000"
 2540      00
 2541              	.LASF49:
 2542 0151 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2542      5341525F 
 2542      5365715F 
 2542      315F436F 
 2542      756E7473 
 2543              	.LASF34:
 2544 016f 7265744D 		.ascii	"retMode\000"
 2544      6F646500 
 2545              	.LASF56:
 2546 0177 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2546      5341525F 
 2546      5365715F 
 2546      315F696E 
 2546      69745661 
 2547              	.LASF8:
 2548 018d 756E7369 		.ascii	"unsigned int\000"
 2548      676E6564 
 2548      20696E74 
 2548      00
 2549              	.LASF63:
 2550 019a 443A5C44 		.ascii	"D:\\Documents\\PSoC Creator\\Arlobot\\Board-KitProg"
 2550      6F63756D 
 2550      656E7473 
 2550      5C50536F 
 2550      43204372 
 2551 01c9 2E637964 		.ascii	".cydsn\000"
 2551      736E00
 2552              	.LASF64:
 2553 01d0 75566F6C 		.ascii	"uVolts\000"
 2553      747300
 2554              	.LASF5:
 2555 01d7 6C6F6E67 		.ascii	"long unsigned int\000"
 2555      20756E73 
 2555      69676E65 
 2555      6420696E 
 2555      7400
 2556              	.LASF54:
 2557 01e9 766F6C74 		.ascii	"volts\000"
 2557      7300
 2558              	.LASF23:
 2559 01ef 746D7052 		.ascii	"tmpRegVal\000"
 2559      65675661 
 2559      6C00
 2560              	.LASF3:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 63


 2561 01f9 73686F72 		.ascii	"short unsigned int\000"
 2561      7420756E 
 2561      7369676E 
 2561      65642069 
 2561      6E7400
 2562              	.LASF65:
 2563 020c 4379496E 		.ascii	"CyIntSetVector\000"
 2563      74536574 
 2563      56656374 
 2563      6F7200
 2564              	.LASF55:
 2565 021b 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2565      5341525F 
 2565      5365715F 
 2565      315F6368 
 2565      616E6E65 
 2566              	.LASF51:
 2567 0238 6D566F6C 		.ascii	"mVolts\000"
 2567      747300
 2568              	.LASF19:
 2569 023f 72656733 		.ascii	"reg32\000"
 2569      3200
 2570              	.LASF62:
 2571 0245 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2571      6E657261 
 2571      7465645F 
 2571      536F7572 
 2571      63655C50 
 2572              	.LASF14:
 2573 026e 666C6F61 		.ascii	"float32\000"
 2573      74333200 
 2574              	.LASF21:
 2575 0276 73697A65 		.ascii	"sizetype\000"
 2575      74797065 
 2575      00
 2576              	.LASF40:
 2577 027f 6C6F774C 		.ascii	"lowLimit\000"
 2577      696D6974 
 2577      00
 2578              	.LASF32:
 2579 0288 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2579      5341525F 
 2579      5365715F 
 2579      315F4973 
 2579      456E6443 
 2580              	.LASF30:
 2581 02a6 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2581      5341525F 
 2581      5365715F 
 2581      315F5374 
 2581      6F70436F 
 2582              	.LASF61:
 2583 02c0 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2583      4320342E 
 2583      392E3320 
 2583      32303135 
 2583      30333033 
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 64


 2584 02f3 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2584      20726576 
 2584      6973696F 
 2584      6E203232 
 2584      31323230 
 2585 0326 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2585      66756E63 
 2585      74696F6E 
 2585      2D736563 
 2585      74696F6E 
 2586              	.LASF17:
 2587 034e 696E7436 		.ascii	"int64\000"
 2587      3400
 2588              	.LASF59:
 2589 0354 4379496E 		.ascii	"CyIntSetPriority\000"
 2589      74536574 
 2589      5072696F 
 2589      72697479 
 2589      00
 2590              	.LASF15:
 2591 0365 666C6F61 		.ascii	"float\000"
 2591      7400
 2592              	.LASF47:
 2593 036b 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2593      5341525F 
 2593      5365715F 
 2593      315F5365 
 2593      74476169 
 2594              	.LASF28:
 2595 0381 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2595      5341525F 
 2595      5365715F 
 2595      315F5374 
 2595      6F7000
 2596              	.LASF42:
 2597 0394 68696768 		.ascii	"highLimit\000"
 2597      4C696D69 
 2597      7400
 2598              	.LASF66:
 2599 039e 43794861 		.ascii	"CyHalt\000"
 2599      6C7400
 2600              	.LASF1:
 2601 03a5 756E7369 		.ascii	"unsigned char\000"
 2601      676E6564 
 2601      20636861 
 2601      7200
 2602              	.LASF2:
 2603 03b3 73686F72 		.ascii	"short int\000"
 2603      7420696E 
 2603      7400
 2604              	.LASF53:
 2605 03bd 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2605      5341525F 
 2605      5365715F 
 2605      315F436F 
 2605      756E7473 
 2606              	.LASF37:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 65


 2607 03da 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2607      5341525F 
 2607      5365715F 
 2607      315F5365 
 2607      74436861 
 2608              	.LASF22:
 2609 03f4 63684E75 		.ascii	"chNum\000"
 2609      6D00
 2610              	.LASF35:
 2611 03fa 6368616E 		.ascii	"chan\000"
 2611      00
 2612              	.LASF18:
 2613 03ff 63686172 		.ascii	"char\000"
 2613      00
 2614              	.LASF20:
 2615 0404 63796973 		.ascii	"cyisraddress\000"
 2615      72616464 
 2615      72657373 
 2615      00
 2616              	.LASF39:
 2617 0411 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2617      5341525F 
 2617      5365715F 
 2617      315F5365 
 2617      744C6F77 
 2618              	.LASF46:
 2619 042b 6F666673 		.ascii	"offset\000"
 2619      657400
 2620              	.LASF50:
 2621 0432 61646343 		.ascii	"adcCounts\000"
 2621      6F756E74 
 2621      7300
 2622              	.LASF58:
 2623 043c 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2623      5341525F 
 2623      5365715F 
 2623      315F636F 
 2623      756E7473 
 2624              	.LASF31:
 2625 045a 73746174 		.ascii	"status\000"
 2625      757300
 2626              	.LASF45:
 2627 0461 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2627      5341525F 
 2627      5365715F 
 2627      315F5365 
 2627      744F6666 
 2628              	.LASF12:
 2629 0479 696E7431 		.ascii	"int16\000"
 2629      3600
 2630              	.LASF43:
 2631 047f 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2631      5341525F 
 2631      5365715F 
 2631      315F5365 
 2631      744C696D 
 2632              	.LASF36:
ARM GAS  C:\Users\Tim\AppData\Local\Temp\cc3Qq7Ti.s 			page 66


 2633 049a 72657375 		.ascii	"result\000"
 2633      6C7400
 2634              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
